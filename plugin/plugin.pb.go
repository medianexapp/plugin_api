// Code generated by protoc-gen-go-lite. DO NOT EDIT.
// protoc-gen-go-lite version: v0.9.1
// source: plugin/plugin.proto

package plugin

import (
	base64 "encoding/base64"
	fmt "fmt"
	protobuf_go_lite "github.com/aperturerobotics/protobuf-go-lite"
	json "github.com/aperturerobotics/protobuf-go-lite/json"
	io "io"
	strconv "strconv"
	strings "strings"
	unsafe "unsafe"
)

type FileEntry_FileType int32

const (
	FileEntry_FileTypeUNSPECIFIED FileEntry_FileType = 0
	FileEntry_FileTypeDir         FileEntry_FileType = 1
	FileEntry_FileTypeFile        FileEntry_FileType = 2
	FileEntry_FileTypeLink        FileEntry_FileType = 3
)

// Enum value maps for FileEntry_FileType.
var (
	FileEntry_FileType_name = map[int32]string{
		0: "FileTypeUNSPECIFIED",
		1: "FileTypeDir",
		2: "FileTypeFile",
		3: "FileTypeLink",
	}
	FileEntry_FileType_value = map[string]int32{
		"FileTypeUNSPECIFIED": 0,
		"FileTypeDir":         1,
		"FileTypeFile":        2,
		"FileTypeLink":        3,
	}
)

func (x FileEntry_FileType) Enum() *FileEntry_FileType {
	p := new(FileEntry_FileType)
	*p = x
	return p
}

func (x FileEntry_FileType) String() string {
	name, valid := FileEntry_FileType_name[int32(x)]
	if valid {
		return name
	}
	return strconv.Itoa(int(x))
}

// video display VideoResolution
type FileResource_Resolution int32

const (
	FileResource_ResolutionUNSPECIFIED FileResource_Resolution = 0
	FileResource_Original              FileResource_Resolution = 1 // Origin
	FileResource_LD                    FileResource_Resolution = 2 // 360P high defintion
	FileResource_SD                    FileResource_Resolution = 3 // 480P high defintion
	FileResource_HD                    FileResource_Resolution = 4 // 720P high defintion
	FileResource_FHD                   FileResource_Resolution = 5 // 1080P full high defintion
	FileResource_QHD                   FileResource_Resolution = 6 // 2K  quad high defintion
	FileResource_UHD                   FileResource_Resolution = 7 // 4K ultra high defintion
)

// Enum value maps for FileResource_Resolution.
var (
	FileResource_Resolution_name = map[int32]string{
		0: "ResolutionUNSPECIFIED",
		1: "Original",
		2: "LD",
		3: "SD",
		4: "HD",
		5: "FHD",
		6: "QHD",
		7: "UHD",
	}
	FileResource_Resolution_value = map[string]int32{
		"ResolutionUNSPECIFIED": 0,
		"Original":              1,
		"LD":                    2,
		"SD":                    3,
		"HD":                    4,
		"FHD":                   5,
		"QHD":                   6,
		"UHD":                   7,
	}
)

func (x FileResource_Resolution) Enum() *FileResource_Resolution {
	p := new(FileResource_Resolution)
	*p = x
	return p
}

func (x FileResource_Resolution) String() string {
	name, valid := FileResource_Resolution_name[int32(x)]
	if valid {
		return name
	}
	return strconv.Itoa(int(x))
}

type FileResource_ResourceType int32

const (
	FileResource_ResourceTypeUNSPECIFIED FileResource_ResourceType = 0
	FileResource_Video                   FileResource_ResourceType = 1
	FileResource_Subtitle                FileResource_ResourceType = 2
	FileResource_Audio                   FileResource_ResourceType = 3
)

// Enum value maps for FileResource_ResourceType.
var (
	FileResource_ResourceType_name = map[int32]string{
		0: "ResourceTypeUNSPECIFIED",
		1: "Video",
		2: "Subtitle",
		3: "Audio",
	}
	FileResource_ResourceType_value = map[string]int32{
		"ResourceTypeUNSPECIFIED": 0,
		"Video":                   1,
		"Subtitle":                2,
		"Audio":                   3,
	}
)

func (x FileResource_ResourceType) Enum() *FileResource_ResourceType {
	p := new(FileResource_ResourceType)
	*p = x
	return p
}

func (x FileResource_ResourceType) String() string {
	name, valid := FileResource_ResourceType_name[int32(x)]
	if valid {
		return name
	}
	return strconv.Itoa(int(x))
}

type Formdata struct {
	unknownFields []byte
	FormItems     []*Formdata_FormItem `protobuf:"bytes,11,rep,name=form_items,json=formItems,proto3" json:"formItems,omitempty"`
}

func (x *Formdata) Reset() {
	*x = Formdata{}
}

func (*Formdata) ProtoMessage() {}

func (x *Formdata) GetFormItems() []*Formdata_FormItem {
	if x != nil {
		return x.FormItems
	}
	return nil
}

type Scanqrcode struct {
	unknownFields    []byte
	QrcodeImage      []byte `protobuf:"bytes,1,opt,name=qrcode_image,json=qrcodeImage,proto3" json:"qrcodeImage,omitempty"`                  // qrcode image
	QrcodeImageParam string `protobuf:"bytes,2,opt,name=qrcode_image_param,json=qrcodeImageParam,proto3" json:"qrcodeImageParam,omitempty"`  // qrcode image some param,like qrcode check key
	QrcodeExpireTime uint64 `protobuf:"varint,3,opt,name=qrcode_expire_time,json=qrcodeExpireTime,proto3" json:"qrcodeExpireTime,omitempty"` // qrcode expire time
}

func (x *Scanqrcode) Reset() {
	*x = Scanqrcode{}
}

func (*Scanqrcode) ProtoMessage() {}

func (x *Scanqrcode) GetQrcodeImage() []byte {
	if x != nil {
		return x.QrcodeImage
	}
	return nil
}

func (x *Scanqrcode) GetQrcodeImageParam() string {
	if x != nil {
		return x.QrcodeImageParam
	}
	return ""
}

func (x *Scanqrcode) GetQrcodeExpireTime() uint64 {
	if x != nil {
		return x.QrcodeExpireTime
	}
	return 0
}

type Callback struct {
	unknownFields    []byte
	CallbackUrl      string `protobuf:"bytes,1,opt,name=callback_url,json=callbackUrl,proto3" json:"callbackUrl,omitempty"`                 // callback url
	CallbackUrlParam string `protobuf:"bytes,2,opt,name=callback_url_param,json=callbackUrlParam,proto3" json:"callbackUrlParam,omitempty"` // param for call back url
	CallbackUrlData  string `protobuf:"bytes,3,opt,name=callback_url_data,json=callbackUrlData,proto3" json:"callbackUrlData,omitempty"`    // url callback data
}

func (x *Callback) Reset() {
	*x = Callback{}
}

func (*Callback) ProtoMessage() {}

func (x *Callback) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *Callback) GetCallbackUrlParam() string {
	if x != nil {
		return x.CallbackUrlParam
	}
	return ""
}

func (x *Callback) GetCallbackUrlData() string {
	if x != nil {
		return x.CallbackUrlData
	}
	return ""
}

type Refresh struct {
	unknownFields []byte
	AuthData      *AuthData `protobuf:"bytes,1,opt,name=auth_data,json=authData,proto3" json:"authData,omitempty"`
}

func (x *Refresh) Reset() {
	*x = Refresh{}
}

func (*Refresh) ProtoMessage() {}

func (x *Refresh) GetAuthData() *AuthData {
	if x != nil {
		return x.AuthData
	}
	return nil
}

type AuthMethod struct {
	unknownFields []byte
	// Types that are assignable to Method:
	//
	//	*AuthMethod_Formdata
	//	*AuthMethod_Scanqrcode
	//	*AuthMethod_Callback
	//	*AuthMethod_Refresh
	Method isAuthMethod_Method `protobuf_oneof:"method"`
}

func (x *AuthMethod) Reset() {
	*x = AuthMethod{}
}

func (*AuthMethod) ProtoMessage() {}

func (m *AuthMethod) GetMethod() isAuthMethod_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *AuthMethod) GetFormdata() *Formdata {
	if x, ok := x.GetMethod().(*AuthMethod_Formdata); ok {
		return x.Formdata
	}
	return nil
}

func (x *AuthMethod) GetScanqrcode() *Scanqrcode {
	if x, ok := x.GetMethod().(*AuthMethod_Scanqrcode); ok {
		return x.Scanqrcode
	}
	return nil
}

func (x *AuthMethod) GetCallback() *Callback {
	if x, ok := x.GetMethod().(*AuthMethod_Callback); ok {
		return x.Callback
	}
	return nil
}

func (x *AuthMethod) GetRefresh() *Refresh {
	if x, ok := x.GetMethod().(*AuthMethod_Refresh); ok {
		return x.Refresh
	}
	return nil
}

type isAuthMethod_Method interface {
	isAuthMethod_Method()
}

type AuthMethod_Formdata struct {
	Formdata *Formdata `protobuf:"bytes,1,opt,name=formdata,proto3,oneof"`
}

type AuthMethod_Scanqrcode struct {
	Scanqrcode *Scanqrcode `protobuf:"bytes,2,opt,name=scanqrcode,proto3,oneof"`
}

type AuthMethod_Callback struct {
	Callback *Callback `protobuf:"bytes,3,opt,name=callback,proto3,oneof"`
}

type AuthMethod_Refresh struct {
	Refresh *Refresh `protobuf:"bytes,4,opt,name=refresh,proto3,oneof"`
}

func (*AuthMethod_Formdata) isAuthMethod_Method() {}

func (*AuthMethod_Scanqrcode) isAuthMethod_Method() {}

func (*AuthMethod_Callback) isAuthMethod_Method() {}

func (*AuthMethod_Refresh) isAuthMethod_Method() {}

type Auth struct {
	unknownFields []byte
	// form data input
	AuthMethods []*AuthMethod `protobuf:"bytes,1,rep,name=auth_methods,json=authMethods,proto3" json:"authMethods,omitempty"` //
}

func (x *Auth) Reset() {
	*x = Auth{}
}

func (*Auth) ProtoMessage() {}

func (x *Auth) GetAuthMethods() []*AuthMethod {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

type FileEntry struct {
	unknownFields []byte
	Name          string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FileType      FileEntry_FileType `protobuf:"varint,2,opt,name=file_type,json=fileType,proto3" json:"fileType,omitempty"`
	Size          uint64             `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	RawData       []byte             `protobuf:"bytes,4,opt,name=raw_data,json=rawData,proto3" json:"rawData,omitempty"`
	CreatedTime   uint64             `protobuf:"varint,10,opt,name=created_time,json=createdTime,proto3" json:"createdTime,omitempty"`
	ModifiedTime  uint64             `protobuf:"varint,11,opt,name=modified_time,json=modifiedTime,proto3" json:"modifiedTime,omitempty"`
	AccessedTime  uint64             `protobuf:"varint,12,opt,name=accessed_time,json=accessedTime,proto3" json:"accessedTime,omitempty"`
}

func (x *FileEntry) Reset() {
	*x = FileEntry{}
}

func (*FileEntry) ProtoMessage() {}

func (x *FileEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileEntry) GetFileType() FileEntry_FileType {
	if x != nil {
		return x.FileType
	}
	return FileEntry_FileTypeUNSPECIFIED
}

func (x *FileEntry) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileEntry) GetRawData() []byte {
	if x != nil {
		return x.RawData
	}
	return nil
}

func (x *FileEntry) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *FileEntry) GetModifiedTime() uint64 {
	if x != nil {
		return x.ModifiedTime
	}
	return 0
}

func (x *FileEntry) GetAccessedTime() uint64 {
	if x != nil {
		return x.AccessedTime
	}
	return 0
}

type DirEntry struct {
	unknownFields []byte
	FileEntries   []*FileEntry `protobuf:"bytes,1,rep,name=file_entries,json=fileEntries,proto3" json:"fileEntries,omitempty"`
	PageSize      uint64       `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"pageSize,omitempty"`
	DirPageKey    string       `protobuf:"bytes,10,opt,name=dir_page_key,json=dirPageKey,proto3" json:"dirPageKey,omitempty"`
}

func (x *DirEntry) Reset() {
	*x = DirEntry{}
}

func (*DirEntry) ProtoMessage() {}

func (x *DirEntry) GetFileEntries() []*FileEntry {
	if x != nil {
		return x.FileEntries
	}
	return nil
}

func (x *DirEntry) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DirEntry) GetDirPageKey() string {
	if x != nil {
		return x.DirPageKey
	}
	return ""
}

type GetDirEntryRequest struct {
	unknownFields []byte
	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Page          uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// default page_size is 100,if this not for you,change is on DirEntry.PageSize
	PageSize   uint64     `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"pageSize,omitempty"`
	FileEntry  *FileEntry `protobuf:"bytes,10,opt,name=file_entry,json=fileEntry,proto3" json:"fileEntry,omitempty"`
	DirPageKey string     `protobuf:"bytes,12,opt,name=dir_page_key,json=dirPageKey,proto3" json:"dirPageKey,omitempty"`
}

func (x *GetDirEntryRequest) Reset() {
	*x = GetDirEntryRequest{}
}

func (*GetDirEntryRequest) ProtoMessage() {}

func (x *GetDirEntryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDirEntryRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetDirEntryRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDirEntryRequest) GetFileEntry() *FileEntry {
	if x != nil {
		return x.FileEntry
	}
	return nil
}

func (x *GetDirEntryRequest) GetDirPageKey() string {
	if x != nil {
		return x.DirPageKey
	}
	return ""
}

type GetFileResourceRequest struct {
	unknownFields []byte
	FilePath      string     `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"filePath,omitempty"`
	FileEntry     *FileEntry `protobuf:"bytes,10,opt,name=file_entry,json=fileEntry,proto3" json:"fileEntry,omitempty"`
}

func (x *GetFileResourceRequest) Reset() {
	*x = GetFileResourceRequest{}
}

func (*GetFileResourceRequest) ProtoMessage() {}

func (x *GetFileResourceRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetFileResourceRequest) GetFileEntry() *FileEntry {
	if x != nil {
		return x.FileEntry
	}
	return nil
}

type FileResource struct {
	unknownFields    []byte
	FileResourceData []*FileResource_FileResourceData `protobuf:"bytes,1,rep,name=file_resource_data,json=fileResourceData,proto3" json:"fileResourceData,omitempty"`
}

func (x *FileResource) Reset() {
	*x = FileResource{}
}

func (*FileResource) ProtoMessage() {}

func (x *FileResource) GetFileResourceData() []*FileResource_FileResourceData {
	if x != nil {
		return x.FileResourceData
	}
	return nil
}

type AuthData struct {
	unknownFields       []byte
	AuthDataBytes       []byte `protobuf:"bytes,1,opt,name=auth_data_bytes,json=authDataBytes,proto3" json:"authDataBytes,omitempty"`
	AuthDataExpiredTime uint64 `protobuf:"varint,2,opt,name=auth_data_expired_time,json=authDataExpiredTime,proto3" json:"authDataExpiredTime,omitempty"`
}

func (x *AuthData) Reset() {
	*x = AuthData{}
}

func (*AuthData) ProtoMessage() {}

func (x *AuthData) GetAuthDataBytes() []byte {
	if x != nil {
		return x.AuthDataBytes
	}
	return nil
}

func (x *AuthData) GetAuthDataExpiredTime() uint64 {
	if x != nil {
		return x.AuthDataExpiredTime
	}
	return 0
}

// oauth config
type OauthConfig struct {
	unknownFields []byte
	ClientId      string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"clientId,omitempty"`
	ClientSecret  string   `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"clientSecret,omitempty"`
	RedirectUri   string   `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirectUri,omitempty"`
	Scopes        []string `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
	AuthUrl       string   `protobuf:"bytes,5,opt,name=auth_url,json=authUrl,proto3" json:"authUrl,omitempty"`
	QrcodeUrl     string   `protobuf:"bytes,6,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
	TokenUrl      string   `protobuf:"bytes,10,opt,name=token_url,json=tokenUrl,proto3" json:"tokenUrl,omitempty"`
	// json POST application/json
	// form POST application/x-www-form-urlencoded
	// uri GET
	TokenReqType string `protobuf:"bytes,11,opt,name=token_req_type,json=tokenReqType,proto3" json:"tokenReqType,omitempty"`
}

func (x *OauthConfig) Reset() {
	*x = OauthConfig{}
}

func (*OauthConfig) ProtoMessage() {}

func (x *OauthConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OauthConfig) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OauthConfig) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *OauthConfig) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *OauthConfig) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *OauthConfig) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *OauthConfig) GetTokenUrl() string {
	if x != nil {
		return x.TokenUrl
	}
	return ""
}

func (x *OauthConfig) GetTokenReqType() string {
	if x != nil {
		return x.TokenReqType
	}
	return ""
}

type Token struct {
	unknownFields []byte
	TokenType     string `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3" json:"tokenType,omitempty"`
	AccessToken   string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken  string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refreshToken,omitempty"`
	ExpiresIn     uint64 `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expiresIn,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
}

func (*Token) ProtoMessage() {}

func (x *Token) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *Token) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Token) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Token) GetExpiresIn() uint64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type Formdata_FormItem struct {
	unknownFields []byte
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Formdata_FormItem_DoubleValue
	//	*Formdata_FormItem_Int64Value
	//	*Formdata_FormItem_BoolValue
	//	*Formdata_FormItem_StringValue
	//	*Formdata_FormItem_ObscureStringValue
	//	*Formdata_FormItem_DirPathValue
	//	*Formdata_FormItem_FilePathValue
	Value      isFormdata_FormItem_Value `protobuf_oneof:"Value"`
	EnumValues []*Formdata_FormItem      `protobuf:"bytes,10,rep,name=enum_values,json=enumValues,proto3" json:"enumValues,omitempty"` // for dropdown widget
}

func (x *Formdata_FormItem) Reset() {
	*x = Formdata_FormItem{}
}

func (*Formdata_FormItem) ProtoMessage() {}

func (x *Formdata_FormItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Formdata_FormItem) GetValue() isFormdata_FormItem_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Formdata_FormItem) GetDoubleValue() *DoubleValue {
	if x, ok := x.GetValue().(*Formdata_FormItem_DoubleValue); ok {
		return x.DoubleValue
	}
	return nil
}

func (x *Formdata_FormItem) GetInt64Value() *Int64Value {
	if x, ok := x.GetValue().(*Formdata_FormItem_Int64Value); ok {
		return x.Int64Value
	}
	return nil
}

func (x *Formdata_FormItem) GetBoolValue() *BoolValue {
	if x, ok := x.GetValue().(*Formdata_FormItem_BoolValue); ok {
		return x.BoolValue
	}
	return nil
}

func (x *Formdata_FormItem) GetStringValue() *StringValue {
	if x, ok := x.GetValue().(*Formdata_FormItem_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *Formdata_FormItem) GetObscureStringValue() *ObscureStringValue {
	if x, ok := x.GetValue().(*Formdata_FormItem_ObscureStringValue); ok {
		return x.ObscureStringValue
	}
	return nil
}

func (x *Formdata_FormItem) GetDirPathValue() *DirPathValue {
	if x, ok := x.GetValue().(*Formdata_FormItem_DirPathValue); ok {
		return x.DirPathValue
	}
	return nil
}

func (x *Formdata_FormItem) GetFilePathValue() *FilePathValue {
	if x, ok := x.GetValue().(*Formdata_FormItem_FilePathValue); ok {
		return x.FilePathValue
	}
	return nil
}

func (x *Formdata_FormItem) GetEnumValues() []*Formdata_FormItem {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

type isFormdata_FormItem_Value interface {
	isFormdata_FormItem_Value()
}

type Formdata_FormItem_DoubleValue struct {
	DoubleValue *DoubleValue `protobuf:"bytes,2,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Formdata_FormItem_Int64Value struct {
	Int64Value *Int64Value `protobuf:"bytes,3,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Formdata_FormItem_BoolValue struct {
	BoolValue *BoolValue `protobuf:"bytes,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Formdata_FormItem_StringValue struct {
	StringValue *StringValue `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Formdata_FormItem_ObscureStringValue struct {
	ObscureStringValue *ObscureStringValue `protobuf:"bytes,6,opt,name=obscure_string_value,json=obscureStringValue,proto3,oneof"`
}

type Formdata_FormItem_DirPathValue struct {
	DirPathValue *DirPathValue `protobuf:"bytes,7,opt,name=dir_path_value,json=dirPathValue,proto3,oneof"`
}

type Formdata_FormItem_FilePathValue struct {
	FilePathValue *FilePathValue `protobuf:"bytes,8,opt,name=file_path_value,json=filePathValue,proto3,oneof"`
}

func (*Formdata_FormItem_DoubleValue) isFormdata_FormItem_Value() {}

func (*Formdata_FormItem_Int64Value) isFormdata_FormItem_Value() {}

func (*Formdata_FormItem_BoolValue) isFormdata_FormItem_Value() {}

func (*Formdata_FormItem_StringValue) isFormdata_FormItem_Value() {}

func (*Formdata_FormItem_ObscureStringValue) isFormdata_FormItem_Value() {}

func (*Formdata_FormItem_DirPathValue) isFormdata_FormItem_Value() {}

func (*Formdata_FormItem_FilePathValue) isFormdata_FormItem_Value() {}

type FileResource_FileResourceData struct {
	unknownFields []byte
	Url           string                    `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Resolution    FileResource_Resolution   `protobuf:"varint,2,opt,name=resolution,proto3" json:"resolution,omitempty"`
	ExpireTime    uint64                    `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expireTime,omitempty"`
	ResourceType  FileResource_ResourceType `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3" json:"resourceType,omitempty"`
	Title         string                    `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Header        map[string]string         `protobuf:"bytes,6,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FileResource_FileResourceData) Reset() {
	*x = FileResource_FileResourceData{}
}

func (*FileResource_FileResourceData) ProtoMessage() {}

func (x *FileResource_FileResourceData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileResource_FileResourceData) GetResolution() FileResource_Resolution {
	if x != nil {
		return x.Resolution
	}
	return FileResource_ResolutionUNSPECIFIED
}

func (x *FileResource_FileResourceData) GetExpireTime() uint64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *FileResource_FileResourceData) GetResourceType() FileResource_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return FileResource_ResourceTypeUNSPECIFIED
}

func (x *FileResource_FileResourceData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FileResource_FileResourceData) GetHeader() map[string]string {
	if x != nil {
		return x.Header
	}
	return nil
}

type FileResource_FileResourceData_HeaderEntry struct {
	unknownFields []byte
	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FileResource_FileResourceData_HeaderEntry) Reset() {
	*x = FileResource_FileResourceData_HeaderEntry{}
}

func (*FileResource_FileResourceData_HeaderEntry) ProtoMessage() {}

func (x *FileResource_FileResourceData_HeaderEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FileResource_FileResourceData_HeaderEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (m *Formdata_FormItem) CloneVT() *Formdata_FormItem {
	if m == nil {
		return (*Formdata_FormItem)(nil)
	}
	r := new(Formdata_FormItem)
	r.Name = m.Name
	if m.Value != nil {
		r.Value = m.Value.(interface {
			CloneOneofVT() isFormdata_FormItem_Value
		}).CloneOneofVT()
	}
	if rhs := m.EnumValues; rhs != nil {
		tmpContainer := make([]*Formdata_FormItem, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.EnumValues = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Formdata_FormItem) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *Formdata_FormItem_DoubleValue) CloneVT() *Formdata_FormItem_DoubleValue {
	if m == nil {
		return (*Formdata_FormItem_DoubleValue)(nil)
	}
	r := new(Formdata_FormItem_DoubleValue)
	r.DoubleValue = m.DoubleValue.CloneVT()
	return r
}

func (m *Formdata_FormItem_DoubleValue) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata_FormItem_Int64Value) CloneVT() *Formdata_FormItem_Int64Value {
	if m == nil {
		return (*Formdata_FormItem_Int64Value)(nil)
	}
	r := new(Formdata_FormItem_Int64Value)
	r.Int64Value = m.Int64Value.CloneVT()
	return r
}

func (m *Formdata_FormItem_Int64Value) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata_FormItem_BoolValue) CloneVT() *Formdata_FormItem_BoolValue {
	if m == nil {
		return (*Formdata_FormItem_BoolValue)(nil)
	}
	r := new(Formdata_FormItem_BoolValue)
	r.BoolValue = m.BoolValue.CloneVT()
	return r
}

func (m *Formdata_FormItem_BoolValue) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata_FormItem_StringValue) CloneVT() *Formdata_FormItem_StringValue {
	if m == nil {
		return (*Formdata_FormItem_StringValue)(nil)
	}
	r := new(Formdata_FormItem_StringValue)
	r.StringValue = m.StringValue.CloneVT()
	return r
}

func (m *Formdata_FormItem_StringValue) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata_FormItem_ObscureStringValue) CloneVT() *Formdata_FormItem_ObscureStringValue {
	if m == nil {
		return (*Formdata_FormItem_ObscureStringValue)(nil)
	}
	r := new(Formdata_FormItem_ObscureStringValue)
	r.ObscureStringValue = m.ObscureStringValue.CloneVT()
	return r
}

func (m *Formdata_FormItem_ObscureStringValue) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata_FormItem_DirPathValue) CloneVT() *Formdata_FormItem_DirPathValue {
	if m == nil {
		return (*Formdata_FormItem_DirPathValue)(nil)
	}
	r := new(Formdata_FormItem_DirPathValue)
	r.DirPathValue = m.DirPathValue.CloneVT()
	return r
}

func (m *Formdata_FormItem_DirPathValue) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata_FormItem_FilePathValue) CloneVT() *Formdata_FormItem_FilePathValue {
	if m == nil {
		return (*Formdata_FormItem_FilePathValue)(nil)
	}
	r := new(Formdata_FormItem_FilePathValue)
	r.FilePathValue = m.FilePathValue.CloneVT()
	return r
}

func (m *Formdata_FormItem_FilePathValue) CloneOneofVT() isFormdata_FormItem_Value {
	return m.CloneVT()
}

func (m *Formdata) CloneVT() *Formdata {
	if m == nil {
		return (*Formdata)(nil)
	}
	r := new(Formdata)
	if rhs := m.FormItems; rhs != nil {
		tmpContainer := make([]*Formdata_FormItem, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.FormItems = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Formdata) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *Scanqrcode) CloneVT() *Scanqrcode {
	if m == nil {
		return (*Scanqrcode)(nil)
	}
	r := new(Scanqrcode)
	r.QrcodeImageParam = m.QrcodeImageParam
	r.QrcodeExpireTime = m.QrcodeExpireTime
	if rhs := m.QrcodeImage; rhs != nil {
		tmpBytes := make([]byte, len(rhs))
		copy(tmpBytes, rhs)
		r.QrcodeImage = tmpBytes
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Scanqrcode) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *Callback) CloneVT() *Callback {
	if m == nil {
		return (*Callback)(nil)
	}
	r := new(Callback)
	r.CallbackUrl = m.CallbackUrl
	r.CallbackUrlParam = m.CallbackUrlParam
	r.CallbackUrlData = m.CallbackUrlData
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Callback) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *Refresh) CloneVT() *Refresh {
	if m == nil {
		return (*Refresh)(nil)
	}
	r := new(Refresh)
	r.AuthData = m.AuthData.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Refresh) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *AuthMethod) CloneVT() *AuthMethod {
	if m == nil {
		return (*AuthMethod)(nil)
	}
	r := new(AuthMethod)
	if m.Method != nil {
		r.Method = m.Method.(interface{ CloneOneofVT() isAuthMethod_Method }).CloneOneofVT()
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *AuthMethod) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *AuthMethod_Formdata) CloneVT() *AuthMethod_Formdata {
	if m == nil {
		return (*AuthMethod_Formdata)(nil)
	}
	r := new(AuthMethod_Formdata)
	r.Formdata = m.Formdata.CloneVT()
	return r
}

func (m *AuthMethod_Formdata) CloneOneofVT() isAuthMethod_Method {
	return m.CloneVT()
}

func (m *AuthMethod_Scanqrcode) CloneVT() *AuthMethod_Scanqrcode {
	if m == nil {
		return (*AuthMethod_Scanqrcode)(nil)
	}
	r := new(AuthMethod_Scanqrcode)
	r.Scanqrcode = m.Scanqrcode.CloneVT()
	return r
}

func (m *AuthMethod_Scanqrcode) CloneOneofVT() isAuthMethod_Method {
	return m.CloneVT()
}

func (m *AuthMethod_Callback) CloneVT() *AuthMethod_Callback {
	if m == nil {
		return (*AuthMethod_Callback)(nil)
	}
	r := new(AuthMethod_Callback)
	r.Callback = m.Callback.CloneVT()
	return r
}

func (m *AuthMethod_Callback) CloneOneofVT() isAuthMethod_Method {
	return m.CloneVT()
}

func (m *AuthMethod_Refresh) CloneVT() *AuthMethod_Refresh {
	if m == nil {
		return (*AuthMethod_Refresh)(nil)
	}
	r := new(AuthMethod_Refresh)
	r.Refresh = m.Refresh.CloneVT()
	return r
}

func (m *AuthMethod_Refresh) CloneOneofVT() isAuthMethod_Method {
	return m.CloneVT()
}

func (m *Auth) CloneVT() *Auth {
	if m == nil {
		return (*Auth)(nil)
	}
	r := new(Auth)
	if rhs := m.AuthMethods; rhs != nil {
		tmpContainer := make([]*AuthMethod, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.AuthMethods = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Auth) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *FileEntry) CloneVT() *FileEntry {
	if m == nil {
		return (*FileEntry)(nil)
	}
	r := new(FileEntry)
	r.Name = m.Name
	r.FileType = m.FileType
	r.Size = m.Size
	r.CreatedTime = m.CreatedTime
	r.ModifiedTime = m.ModifiedTime
	r.AccessedTime = m.AccessedTime
	if rhs := m.RawData; rhs != nil {
		tmpBytes := make([]byte, len(rhs))
		copy(tmpBytes, rhs)
		r.RawData = tmpBytes
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *FileEntry) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *DirEntry) CloneVT() *DirEntry {
	if m == nil {
		return (*DirEntry)(nil)
	}
	r := new(DirEntry)
	r.PageSize = m.PageSize
	r.DirPageKey = m.DirPageKey
	if rhs := m.FileEntries; rhs != nil {
		tmpContainer := make([]*FileEntry, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.FileEntries = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *DirEntry) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *GetDirEntryRequest) CloneVT() *GetDirEntryRequest {
	if m == nil {
		return (*GetDirEntryRequest)(nil)
	}
	r := new(GetDirEntryRequest)
	r.Path = m.Path
	r.Page = m.Page
	r.PageSize = m.PageSize
	r.FileEntry = m.FileEntry.CloneVT()
	r.DirPageKey = m.DirPageKey
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetDirEntryRequest) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *GetFileResourceRequest) CloneVT() *GetFileResourceRequest {
	if m == nil {
		return (*GetFileResourceRequest)(nil)
	}
	r := new(GetFileResourceRequest)
	r.FilePath = m.FilePath
	r.FileEntry = m.FileEntry.CloneVT()
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *GetFileResourceRequest) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *FileResource_FileResourceData) CloneVT() *FileResource_FileResourceData {
	if m == nil {
		return (*FileResource_FileResourceData)(nil)
	}
	r := new(FileResource_FileResourceData)
	r.Url = m.Url
	r.Resolution = m.Resolution
	r.ExpireTime = m.ExpireTime
	r.ResourceType = m.ResourceType
	r.Title = m.Title
	if rhs := m.Header; rhs != nil {
		tmpContainer := make(map[string]string, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v
		}
		r.Header = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *FileResource_FileResourceData) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *FileResource) CloneVT() *FileResource {
	if m == nil {
		return (*FileResource)(nil)
	}
	r := new(FileResource)
	if rhs := m.FileResourceData; rhs != nil {
		tmpContainer := make([]*FileResource_FileResourceData, len(rhs))
		for k, v := range rhs {
			tmpContainer[k] = v.CloneVT()
		}
		r.FileResourceData = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *FileResource) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *AuthData) CloneVT() *AuthData {
	if m == nil {
		return (*AuthData)(nil)
	}
	r := new(AuthData)
	r.AuthDataExpiredTime = m.AuthDataExpiredTime
	if rhs := m.AuthDataBytes; rhs != nil {
		tmpBytes := make([]byte, len(rhs))
		copy(tmpBytes, rhs)
		r.AuthDataBytes = tmpBytes
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *AuthData) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *OauthConfig) CloneVT() *OauthConfig {
	if m == nil {
		return (*OauthConfig)(nil)
	}
	r := new(OauthConfig)
	r.ClientId = m.ClientId
	r.ClientSecret = m.ClientSecret
	r.RedirectUri = m.RedirectUri
	r.AuthUrl = m.AuthUrl
	r.QrcodeUrl = m.QrcodeUrl
	r.TokenUrl = m.TokenUrl
	r.TokenReqType = m.TokenReqType
	if rhs := m.Scopes; rhs != nil {
		tmpContainer := make([]string, len(rhs))
		copy(tmpContainer, rhs)
		r.Scopes = tmpContainer
	}
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *OauthConfig) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (m *Token) CloneVT() *Token {
	if m == nil {
		return (*Token)(nil)
	}
	r := new(Token)
	r.TokenType = m.TokenType
	r.AccessToken = m.AccessToken
	r.RefreshToken = m.RefreshToken
	r.ExpiresIn = m.ExpiresIn
	if len(m.unknownFields) > 0 {
		r.unknownFields = make([]byte, len(m.unknownFields))
		copy(r.unknownFields, m.unknownFields)
	}
	return r
}

func (m *Token) CloneMessageVT() protobuf_go_lite.CloneMessage {
	return m.CloneVT()
}

func (this *Formdata_FormItem) EqualVT(that *Formdata_FormItem) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Value == nil && that.Value != nil {
		return false
	} else if this.Value != nil {
		if that.Value == nil {
			return false
		}
		if !this.Value.(interface {
			EqualVT(isFormdata_FormItem_Value) bool
		}).EqualVT(that.Value) {
			return false
		}
	}
	if this.Name != that.Name {
		return false
	}
	if len(this.EnumValues) != len(that.EnumValues) {
		return false
	}
	for i, vx := range this.EnumValues {
		vy := that.EnumValues[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &Formdata_FormItem{}
			}
			if q == nil {
				q = &Formdata_FormItem{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Formdata_FormItem) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Formdata_FormItem)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Formdata_FormItem_DoubleValue) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_DoubleValue)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.DoubleValue, that.DoubleValue; p != q {
		if p == nil {
			p = &DoubleValue{}
		}
		if q == nil {
			q = &DoubleValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata_FormItem_Int64Value) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_Int64Value)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Int64Value, that.Int64Value; p != q {
		if p == nil {
			p = &Int64Value{}
		}
		if q == nil {
			q = &Int64Value{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata_FormItem_BoolValue) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_BoolValue)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.BoolValue, that.BoolValue; p != q {
		if p == nil {
			p = &BoolValue{}
		}
		if q == nil {
			q = &BoolValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata_FormItem_StringValue) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_StringValue)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.StringValue, that.StringValue; p != q {
		if p == nil {
			p = &StringValue{}
		}
		if q == nil {
			q = &StringValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata_FormItem_ObscureStringValue) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_ObscureStringValue)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.ObscureStringValue, that.ObscureStringValue; p != q {
		if p == nil {
			p = &ObscureStringValue{}
		}
		if q == nil {
			q = &ObscureStringValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata_FormItem_DirPathValue) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_DirPathValue)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.DirPathValue, that.DirPathValue; p != q {
		if p == nil {
			p = &DirPathValue{}
		}
		if q == nil {
			q = &DirPathValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata_FormItem_FilePathValue) EqualVT(thatIface isFormdata_FormItem_Value) bool {
	that, ok := thatIface.(*Formdata_FormItem_FilePathValue)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.FilePathValue, that.FilePathValue; p != q {
		if p == nil {
			p = &FilePathValue{}
		}
		if q == nil {
			q = &FilePathValue{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Formdata) EqualVT(that *Formdata) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.FormItems) != len(that.FormItems) {
		return false
	}
	for i, vx := range this.FormItems {
		vy := that.FormItems[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &Formdata_FormItem{}
			}
			if q == nil {
				q = &Formdata_FormItem{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Formdata) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Formdata)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Scanqrcode) EqualVT(that *Scanqrcode) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if string(this.QrcodeImage) != string(that.QrcodeImage) {
		return false
	}
	if this.QrcodeImageParam != that.QrcodeImageParam {
		return false
	}
	if this.QrcodeExpireTime != that.QrcodeExpireTime {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Scanqrcode) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Scanqrcode)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Callback) EqualVT(that *Callback) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.CallbackUrl != that.CallbackUrl {
		return false
	}
	if this.CallbackUrlParam != that.CallbackUrlParam {
		return false
	}
	if this.CallbackUrlData != that.CallbackUrlData {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Callback) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Callback)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Refresh) EqualVT(that *Refresh) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if !this.AuthData.EqualVT(that.AuthData) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Refresh) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Refresh)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *AuthMethod) EqualVT(that *AuthMethod) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Method == nil && that.Method != nil {
		return false
	} else if this.Method != nil {
		if that.Method == nil {
			return false
		}
		if !this.Method.(interface {
			EqualVT(isAuthMethod_Method) bool
		}).EqualVT(that.Method) {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *AuthMethod) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*AuthMethod)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *AuthMethod_Formdata) EqualVT(thatIface isAuthMethod_Method) bool {
	that, ok := thatIface.(*AuthMethod_Formdata)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Formdata, that.Formdata; p != q {
		if p == nil {
			p = &Formdata{}
		}
		if q == nil {
			q = &Formdata{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *AuthMethod_Scanqrcode) EqualVT(thatIface isAuthMethod_Method) bool {
	that, ok := thatIface.(*AuthMethod_Scanqrcode)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Scanqrcode, that.Scanqrcode; p != q {
		if p == nil {
			p = &Scanqrcode{}
		}
		if q == nil {
			q = &Scanqrcode{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *AuthMethod_Callback) EqualVT(thatIface isAuthMethod_Method) bool {
	that, ok := thatIface.(*AuthMethod_Callback)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Callback, that.Callback; p != q {
		if p == nil {
			p = &Callback{}
		}
		if q == nil {
			q = &Callback{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *AuthMethod_Refresh) EqualVT(thatIface isAuthMethod_Method) bool {
	that, ok := thatIface.(*AuthMethod_Refresh)
	if !ok {
		return false
	}
	if this == that {
		return true
	}
	if this == nil && that != nil || this != nil && that == nil {
		return false
	}
	if p, q := this.Refresh, that.Refresh; p != q {
		if p == nil {
			p = &Refresh{}
		}
		if q == nil {
			q = &Refresh{}
		}
		if !p.EqualVT(q) {
			return false
		}
	}
	return true
}

func (this *Auth) EqualVT(that *Auth) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.AuthMethods) != len(that.AuthMethods) {
		return false
	}
	for i, vx := range this.AuthMethods {
		vy := that.AuthMethods[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &AuthMethod{}
			}
			if q == nil {
				q = &AuthMethod{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Auth) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Auth)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *FileEntry) EqualVT(that *FileEntry) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Name != that.Name {
		return false
	}
	if this.FileType != that.FileType {
		return false
	}
	if this.Size != that.Size {
		return false
	}
	if string(this.RawData) != string(that.RawData) {
		return false
	}
	if this.CreatedTime != that.CreatedTime {
		return false
	}
	if this.ModifiedTime != that.ModifiedTime {
		return false
	}
	if this.AccessedTime != that.AccessedTime {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *FileEntry) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*FileEntry)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *DirEntry) EqualVT(that *DirEntry) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.FileEntries) != len(that.FileEntries) {
		return false
	}
	for i, vx := range this.FileEntries {
		vy := that.FileEntries[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &FileEntry{}
			}
			if q == nil {
				q = &FileEntry{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if this.DirPageKey != that.DirPageKey {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *DirEntry) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*DirEntry)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetDirEntryRequest) EqualVT(that *GetDirEntryRequest) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Path != that.Path {
		return false
	}
	if this.Page != that.Page {
		return false
	}
	if this.PageSize != that.PageSize {
		return false
	}
	if !this.FileEntry.EqualVT(that.FileEntry) {
		return false
	}
	if this.DirPageKey != that.DirPageKey {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetDirEntryRequest) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*GetDirEntryRequest)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *GetFileResourceRequest) EqualVT(that *GetFileResourceRequest) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.FilePath != that.FilePath {
		return false
	}
	if !this.FileEntry.EqualVT(that.FileEntry) {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *GetFileResourceRequest) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*GetFileResourceRequest)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *FileResource_FileResourceData) EqualVT(that *FileResource_FileResourceData) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.Url != that.Url {
		return false
	}
	if this.Resolution != that.Resolution {
		return false
	}
	if this.ExpireTime != that.ExpireTime {
		return false
	}
	if this.ResourceType != that.ResourceType {
		return false
	}
	if this.Title != that.Title {
		return false
	}
	if len(this.Header) != len(that.Header) {
		return false
	}
	for i, vx := range this.Header {
		vy, ok := that.Header[i]
		if !ok {
			return false
		}
		if vx != vy {
			return false
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *FileResource_FileResourceData) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*FileResource_FileResourceData)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *FileResource) EqualVT(that *FileResource) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if len(this.FileResourceData) != len(that.FileResourceData) {
		return false
	}
	for i, vx := range this.FileResourceData {
		vy := that.FileResourceData[i]
		if p, q := vx, vy; p != q {
			if p == nil {
				p = &FileResource_FileResourceData{}
			}
			if q == nil {
				q = &FileResource_FileResourceData{}
			}
			if !p.EqualVT(q) {
				return false
			}
		}
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *FileResource) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*FileResource)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *AuthData) EqualVT(that *AuthData) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if string(this.AuthDataBytes) != string(that.AuthDataBytes) {
		return false
	}
	if this.AuthDataExpiredTime != that.AuthDataExpiredTime {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *AuthData) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*AuthData)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *OauthConfig) EqualVT(that *OauthConfig) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.ClientId != that.ClientId {
		return false
	}
	if this.ClientSecret != that.ClientSecret {
		return false
	}
	if this.RedirectUri != that.RedirectUri {
		return false
	}
	if len(this.Scopes) != len(that.Scopes) {
		return false
	}
	for i, vx := range this.Scopes {
		vy := that.Scopes[i]
		if vx != vy {
			return false
		}
	}
	if this.AuthUrl != that.AuthUrl {
		return false
	}
	if this.QrcodeUrl != that.QrcodeUrl {
		return false
	}
	if this.TokenUrl != that.TokenUrl {
		return false
	}
	if this.TokenReqType != that.TokenReqType {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *OauthConfig) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*OauthConfig)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}
func (this *Token) EqualVT(that *Token) bool {
	if this == that {
		return true
	} else if this == nil || that == nil {
		return false
	}
	if this.TokenType != that.TokenType {
		return false
	}
	if this.AccessToken != that.AccessToken {
		return false
	}
	if this.RefreshToken != that.RefreshToken {
		return false
	}
	if this.ExpiresIn != that.ExpiresIn {
		return false
	}
	return string(this.unknownFields) == string(that.unknownFields)
}

func (this *Token) EqualMessageVT(thatMsg any) bool {
	that, ok := thatMsg.(*Token)
	if !ok {
		return false
	}
	return this.EqualVT(that)
}

// MarshalProtoJSON marshals the Formdata_FormItem message to JSON.
func (x *Formdata_FormItem) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Name != "" || s.HasField("name") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("name")
		s.WriteString(x.Name)
	}
	if x.Value != nil {
		switch ov := x.Value.(type) {
		case *Formdata_FormItem_DoubleValue:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("doubleValue")
			ov.DoubleValue.MarshalProtoJSON(s.WithField("doubleValue"))
		case *Formdata_FormItem_Int64Value:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("int64Value")
			ov.Int64Value.MarshalProtoJSON(s.WithField("int64Value"))
		case *Formdata_FormItem_BoolValue:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("boolValue")
			ov.BoolValue.MarshalProtoJSON(s.WithField("boolValue"))
		case *Formdata_FormItem_StringValue:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("stringValue")
			ov.StringValue.MarshalProtoJSON(s.WithField("stringValue"))
		case *Formdata_FormItem_ObscureStringValue:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("obscureStringValue")
			ov.ObscureStringValue.MarshalProtoJSON(s.WithField("obscureStringValue"))
		case *Formdata_FormItem_DirPathValue:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("dirPathValue")
			ov.DirPathValue.MarshalProtoJSON(s.WithField("dirPathValue"))
		case *Formdata_FormItem_FilePathValue:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("filePathValue")
			ov.FilePathValue.MarshalProtoJSON(s.WithField("filePathValue"))
		}
	}
	if len(x.EnumValues) > 0 || s.HasField("enumValues") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("enumValues")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.EnumValues {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("enumValues"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Formdata_FormItem to JSON.
func (x *Formdata_FormItem) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Formdata_FormItem message from JSON.
func (x *Formdata_FormItem) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "name":
			s.AddField("name")
			x.Name = s.ReadString()
		case "double_value", "doubleValue":
			ov := &Formdata_FormItem_DoubleValue{}
			x.Value = ov
			if s.ReadNil() {
				ov.DoubleValue = nil
				return
			}
			ov.DoubleValue = &DoubleValue{}
			ov.DoubleValue.UnmarshalProtoJSON(s.WithField("double_value", true))
		case "int64_value", "int64Value":
			ov := &Formdata_FormItem_Int64Value{}
			x.Value = ov
			if s.ReadNil() {
				ov.Int64Value = nil
				return
			}
			ov.Int64Value = &Int64Value{}
			ov.Int64Value.UnmarshalProtoJSON(s.WithField("int64_value", true))
		case "bool_value", "boolValue":
			ov := &Formdata_FormItem_BoolValue{}
			x.Value = ov
			if s.ReadNil() {
				ov.BoolValue = nil
				return
			}
			ov.BoolValue = &BoolValue{}
			ov.BoolValue.UnmarshalProtoJSON(s.WithField("bool_value", true))
		case "string_value", "stringValue":
			ov := &Formdata_FormItem_StringValue{}
			x.Value = ov
			if s.ReadNil() {
				ov.StringValue = nil
				return
			}
			ov.StringValue = &StringValue{}
			ov.StringValue.UnmarshalProtoJSON(s.WithField("string_value", true))
		case "obscure_string_value", "obscureStringValue":
			ov := &Formdata_FormItem_ObscureStringValue{}
			x.Value = ov
			if s.ReadNil() {
				ov.ObscureStringValue = nil
				return
			}
			ov.ObscureStringValue = &ObscureStringValue{}
			ov.ObscureStringValue.UnmarshalProtoJSON(s.WithField("obscure_string_value", true))
		case "dir_path_value", "dirPathValue":
			ov := &Formdata_FormItem_DirPathValue{}
			x.Value = ov
			if s.ReadNil() {
				ov.DirPathValue = nil
				return
			}
			ov.DirPathValue = &DirPathValue{}
			ov.DirPathValue.UnmarshalProtoJSON(s.WithField("dir_path_value", true))
		case "file_path_value", "filePathValue":
			ov := &Formdata_FormItem_FilePathValue{}
			x.Value = ov
			if s.ReadNil() {
				ov.FilePathValue = nil
				return
			}
			ov.FilePathValue = &FilePathValue{}
			ov.FilePathValue.UnmarshalProtoJSON(s.WithField("file_path_value", true))
		case "enum_values", "enumValues":
			s.AddField("enum_values")
			if s.ReadNil() {
				x.EnumValues = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.EnumValues = append(x.EnumValues, nil)
					return
				}
				v := &Formdata_FormItem{}
				v.UnmarshalProtoJSON(s.WithField("enum_values", false))
				if s.Err() != nil {
					return
				}
				x.EnumValues = append(x.EnumValues, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the Formdata_FormItem from JSON.
func (x *Formdata_FormItem) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the Formdata message to JSON.
func (x *Formdata) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.FormItems) > 0 || s.HasField("formItems") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("formItems")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.FormItems {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("formItems"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Formdata to JSON.
func (x *Formdata) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Formdata message from JSON.
func (x *Formdata) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "form_items", "formItems":
			s.AddField("form_items")
			if s.ReadNil() {
				x.FormItems = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.FormItems = append(x.FormItems, nil)
					return
				}
				v := &Formdata_FormItem{}
				v.UnmarshalProtoJSON(s.WithField("form_items", false))
				if s.Err() != nil {
					return
				}
				x.FormItems = append(x.FormItems, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the Formdata from JSON.
func (x *Formdata) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the Scanqrcode message to JSON.
func (x *Scanqrcode) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.QrcodeImage) > 0 || s.HasField("qrcodeImage") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("qrcodeImage")
		s.WriteBytes(x.QrcodeImage)
	}
	if x.QrcodeImageParam != "" || s.HasField("qrcodeImageParam") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("qrcodeImageParam")
		s.WriteString(x.QrcodeImageParam)
	}
	if x.QrcodeExpireTime != 0 || s.HasField("qrcodeExpireTime") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("qrcodeExpireTime")
		s.WriteUint64(x.QrcodeExpireTime)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Scanqrcode to JSON.
func (x *Scanqrcode) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Scanqrcode message from JSON.
func (x *Scanqrcode) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "qrcode_image", "qrcodeImage":
			s.AddField("qrcode_image")
			x.QrcodeImage = s.ReadBytes()
		case "qrcode_image_param", "qrcodeImageParam":
			s.AddField("qrcode_image_param")
			x.QrcodeImageParam = s.ReadString()
		case "qrcode_expire_time", "qrcodeExpireTime":
			s.AddField("qrcode_expire_time")
			x.QrcodeExpireTime = s.ReadUint64()
		}
	})
}

// UnmarshalJSON unmarshals the Scanqrcode from JSON.
func (x *Scanqrcode) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the Callback message to JSON.
func (x *Callback) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.CallbackUrl != "" || s.HasField("callbackUrl") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("callbackUrl")
		s.WriteString(x.CallbackUrl)
	}
	if x.CallbackUrlParam != "" || s.HasField("callbackUrlParam") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("callbackUrlParam")
		s.WriteString(x.CallbackUrlParam)
	}
	if x.CallbackUrlData != "" || s.HasField("callbackUrlData") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("callbackUrlData")
		s.WriteString(x.CallbackUrlData)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Callback to JSON.
func (x *Callback) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Callback message from JSON.
func (x *Callback) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "callback_url", "callbackUrl":
			s.AddField("callback_url")
			x.CallbackUrl = s.ReadString()
		case "callback_url_param", "callbackUrlParam":
			s.AddField("callback_url_param")
			x.CallbackUrlParam = s.ReadString()
		case "callback_url_data", "callbackUrlData":
			s.AddField("callback_url_data")
			x.CallbackUrlData = s.ReadString()
		}
	})
}

// UnmarshalJSON unmarshals the Callback from JSON.
func (x *Callback) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the Refresh message to JSON.
func (x *Refresh) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.AuthData != nil || s.HasField("authData") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("authData")
		x.AuthData.MarshalProtoJSON(s.WithField("authData"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Refresh to JSON.
func (x *Refresh) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Refresh message from JSON.
func (x *Refresh) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "auth_data", "authData":
			if s.ReadNil() {
				x.AuthData = nil
				return
			}
			x.AuthData = &AuthData{}
			x.AuthData.UnmarshalProtoJSON(s.WithField("auth_data", true))
		}
	})
}

// UnmarshalJSON unmarshals the Refresh from JSON.
func (x *Refresh) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the AuthMethod message to JSON.
func (x *AuthMethod) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Method != nil {
		switch ov := x.Method.(type) {
		case *AuthMethod_Formdata:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("formdata")
			ov.Formdata.MarshalProtoJSON(s.WithField("formdata"))
		case *AuthMethod_Scanqrcode:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("scanqrcode")
			ov.Scanqrcode.MarshalProtoJSON(s.WithField("scanqrcode"))
		case *AuthMethod_Callback:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("callback")
			ov.Callback.MarshalProtoJSON(s.WithField("callback"))
		case *AuthMethod_Refresh:
			s.WriteMoreIf(&wroteField)
			s.WriteObjectField("refresh")
			ov.Refresh.MarshalProtoJSON(s.WithField("refresh"))
		}
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the AuthMethod to JSON.
func (x *AuthMethod) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the AuthMethod message from JSON.
func (x *AuthMethod) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "formdata":
			ov := &AuthMethod_Formdata{}
			x.Method = ov
			if s.ReadNil() {
				ov.Formdata = nil
				return
			}
			ov.Formdata = &Formdata{}
			ov.Formdata.UnmarshalProtoJSON(s.WithField("formdata", true))
		case "scanqrcode":
			ov := &AuthMethod_Scanqrcode{}
			x.Method = ov
			if s.ReadNil() {
				ov.Scanqrcode = nil
				return
			}
			ov.Scanqrcode = &Scanqrcode{}
			ov.Scanqrcode.UnmarshalProtoJSON(s.WithField("scanqrcode", true))
		case "callback":
			ov := &AuthMethod_Callback{}
			x.Method = ov
			if s.ReadNil() {
				ov.Callback = nil
				return
			}
			ov.Callback = &Callback{}
			ov.Callback.UnmarshalProtoJSON(s.WithField("callback", true))
		case "refresh":
			ov := &AuthMethod_Refresh{}
			x.Method = ov
			if s.ReadNil() {
				ov.Refresh = nil
				return
			}
			ov.Refresh = &Refresh{}
			ov.Refresh.UnmarshalProtoJSON(s.WithField("refresh", true))
		}
	})
}

// UnmarshalJSON unmarshals the AuthMethod from JSON.
func (x *AuthMethod) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the Auth message to JSON.
func (x *Auth) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.AuthMethods) > 0 || s.HasField("authMethods") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("authMethods")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.AuthMethods {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("authMethods"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Auth to JSON.
func (x *Auth) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Auth message from JSON.
func (x *Auth) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "auth_methods", "authMethods":
			s.AddField("auth_methods")
			if s.ReadNil() {
				x.AuthMethods = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.AuthMethods = append(x.AuthMethods, nil)
					return
				}
				v := &AuthMethod{}
				v.UnmarshalProtoJSON(s.WithField("auth_methods", false))
				if s.Err() != nil {
					return
				}
				x.AuthMethods = append(x.AuthMethods, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the Auth from JSON.
func (x *Auth) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileEntry_FileType to JSON.
func (x FileEntry_FileType) MarshalProtoJSON(s *json.MarshalState) {
	s.WriteEnumString(int32(x), FileEntry_FileType_name)
}

// MarshalText marshals the FileEntry_FileType to text.
func (x FileEntry_FileType) MarshalText() ([]byte, error) {
	return []byte(json.GetEnumString(int32(x), FileEntry_FileType_name)), nil
}

// MarshalJSON marshals the FileEntry_FileType to JSON.
func (x FileEntry_FileType) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileEntry_FileType from JSON.
func (x *FileEntry_FileType) UnmarshalProtoJSON(s *json.UnmarshalState) {
	v := s.ReadEnum(FileEntry_FileType_value)
	if err := s.Err(); err != nil {
		s.SetErrorf("could not read FileType enum: %v", err)
		return
	}
	*x = FileEntry_FileType(v)
}

// UnmarshalText unmarshals the FileEntry_FileType from text.
func (x *FileEntry_FileType) UnmarshalText(b []byte) error {
	i, err := json.ParseEnumString(string(b), FileEntry_FileType_value)
	if err != nil {
		return err
	}
	*x = FileEntry_FileType(i)
	return nil
}

// UnmarshalJSON unmarshals the FileEntry_FileType from JSON.
func (x *FileEntry_FileType) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileEntry message to JSON.
func (x *FileEntry) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Name != "" || s.HasField("name") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("name")
		s.WriteString(x.Name)
	}
	if x.FileType != 0 || s.HasField("fileType") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("fileType")
		x.FileType.MarshalProtoJSON(s)
	}
	if x.Size != 0 || s.HasField("size") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("size")
		s.WriteUint64(x.Size)
	}
	if len(x.RawData) > 0 || s.HasField("rawData") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("rawData")
		s.WriteBytes(x.RawData)
	}
	if x.CreatedTime != 0 || s.HasField("createdTime") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("createdTime")
		s.WriteUint64(x.CreatedTime)
	}
	if x.ModifiedTime != 0 || s.HasField("modifiedTime") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("modifiedTime")
		s.WriteUint64(x.ModifiedTime)
	}
	if x.AccessedTime != 0 || s.HasField("accessedTime") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("accessedTime")
		s.WriteUint64(x.AccessedTime)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the FileEntry to JSON.
func (x *FileEntry) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileEntry message from JSON.
func (x *FileEntry) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "name":
			s.AddField("name")
			x.Name = s.ReadString()
		case "file_type", "fileType":
			s.AddField("file_type")
			x.FileType.UnmarshalProtoJSON(s)
		case "size":
			s.AddField("size")
			x.Size = s.ReadUint64()
		case "raw_data", "rawData":
			s.AddField("raw_data")
			x.RawData = s.ReadBytes()
		case "created_time", "createdTime":
			s.AddField("created_time")
			x.CreatedTime = s.ReadUint64()
		case "modified_time", "modifiedTime":
			s.AddField("modified_time")
			x.ModifiedTime = s.ReadUint64()
		case "accessed_time", "accessedTime":
			s.AddField("accessed_time")
			x.AccessedTime = s.ReadUint64()
		}
	})
}

// UnmarshalJSON unmarshals the FileEntry from JSON.
func (x *FileEntry) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the DirEntry message to JSON.
func (x *DirEntry) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.FileEntries) > 0 || s.HasField("fileEntries") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("fileEntries")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.FileEntries {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("fileEntries"))
		}
		s.WriteArrayEnd()
	}
	if x.PageSize != 0 || s.HasField("pageSize") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("pageSize")
		s.WriteUint64(x.PageSize)
	}
	if x.DirPageKey != "" || s.HasField("dirPageKey") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("dirPageKey")
		s.WriteString(x.DirPageKey)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the DirEntry to JSON.
func (x *DirEntry) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the DirEntry message from JSON.
func (x *DirEntry) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "file_entries", "fileEntries":
			s.AddField("file_entries")
			if s.ReadNil() {
				x.FileEntries = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.FileEntries = append(x.FileEntries, nil)
					return
				}
				v := &FileEntry{}
				v.UnmarshalProtoJSON(s.WithField("file_entries", false))
				if s.Err() != nil {
					return
				}
				x.FileEntries = append(x.FileEntries, v)
			})
		case "page_size", "pageSize":
			s.AddField("page_size")
			x.PageSize = s.ReadUint64()
		case "dir_page_key", "dirPageKey":
			s.AddField("dir_page_key")
			x.DirPageKey = s.ReadString()
		}
	})
}

// UnmarshalJSON unmarshals the DirEntry from JSON.
func (x *DirEntry) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetDirEntryRequest message to JSON.
func (x *GetDirEntryRequest) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Path != "" || s.HasField("path") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("path")
		s.WriteString(x.Path)
	}
	if x.Page != 0 || s.HasField("page") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("page")
		s.WriteUint64(x.Page)
	}
	if x.PageSize != 0 || s.HasField("pageSize") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("pageSize")
		s.WriteUint64(x.PageSize)
	}
	if x.FileEntry != nil || s.HasField("fileEntry") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("fileEntry")
		x.FileEntry.MarshalProtoJSON(s.WithField("fileEntry"))
	}
	if x.DirPageKey != "" || s.HasField("dirPageKey") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("dirPageKey")
		s.WriteString(x.DirPageKey)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetDirEntryRequest to JSON.
func (x *GetDirEntryRequest) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GetDirEntryRequest message from JSON.
func (x *GetDirEntryRequest) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "path":
			s.AddField("path")
			x.Path = s.ReadString()
		case "page":
			s.AddField("page")
			x.Page = s.ReadUint64()
		case "page_size", "pageSize":
			s.AddField("page_size")
			x.PageSize = s.ReadUint64()
		case "file_entry", "fileEntry":
			if s.ReadNil() {
				x.FileEntry = nil
				return
			}
			x.FileEntry = &FileEntry{}
			x.FileEntry.UnmarshalProtoJSON(s.WithField("file_entry", true))
		case "dir_page_key", "dirPageKey":
			s.AddField("dir_page_key")
			x.DirPageKey = s.ReadString()
		}
	})
}

// UnmarshalJSON unmarshals the GetDirEntryRequest from JSON.
func (x *GetDirEntryRequest) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the GetFileResourceRequest message to JSON.
func (x *GetFileResourceRequest) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.FilePath != "" || s.HasField("filePath") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("filePath")
		s.WriteString(x.FilePath)
	}
	if x.FileEntry != nil || s.HasField("fileEntry") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("fileEntry")
		x.FileEntry.MarshalProtoJSON(s.WithField("fileEntry"))
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the GetFileResourceRequest to JSON.
func (x *GetFileResourceRequest) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the GetFileResourceRequest message from JSON.
func (x *GetFileResourceRequest) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "file_path", "filePath":
			s.AddField("file_path")
			x.FilePath = s.ReadString()
		case "file_entry", "fileEntry":
			if s.ReadNil() {
				x.FileEntry = nil
				return
			}
			x.FileEntry = &FileEntry{}
			x.FileEntry.UnmarshalProtoJSON(s.WithField("file_entry", true))
		}
	})
}

// UnmarshalJSON unmarshals the GetFileResourceRequest from JSON.
func (x *GetFileResourceRequest) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileResource_Resolution to JSON.
func (x FileResource_Resolution) MarshalProtoJSON(s *json.MarshalState) {
	s.WriteEnumString(int32(x), FileResource_Resolution_name)
}

// MarshalText marshals the FileResource_Resolution to text.
func (x FileResource_Resolution) MarshalText() ([]byte, error) {
	return []byte(json.GetEnumString(int32(x), FileResource_Resolution_name)), nil
}

// MarshalJSON marshals the FileResource_Resolution to JSON.
func (x FileResource_Resolution) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileResource_Resolution from JSON.
func (x *FileResource_Resolution) UnmarshalProtoJSON(s *json.UnmarshalState) {
	v := s.ReadEnum(FileResource_Resolution_value)
	if err := s.Err(); err != nil {
		s.SetErrorf("could not read Resolution enum: %v", err)
		return
	}
	*x = FileResource_Resolution(v)
}

// UnmarshalText unmarshals the FileResource_Resolution from text.
func (x *FileResource_Resolution) UnmarshalText(b []byte) error {
	i, err := json.ParseEnumString(string(b), FileResource_Resolution_value)
	if err != nil {
		return err
	}
	*x = FileResource_Resolution(i)
	return nil
}

// UnmarshalJSON unmarshals the FileResource_Resolution from JSON.
func (x *FileResource_Resolution) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileResource_ResourceType to JSON.
func (x FileResource_ResourceType) MarshalProtoJSON(s *json.MarshalState) {
	s.WriteEnumString(int32(x), FileResource_ResourceType_name)
}

// MarshalText marshals the FileResource_ResourceType to text.
func (x FileResource_ResourceType) MarshalText() ([]byte, error) {
	return []byte(json.GetEnumString(int32(x), FileResource_ResourceType_name)), nil
}

// MarshalJSON marshals the FileResource_ResourceType to JSON.
func (x FileResource_ResourceType) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileResource_ResourceType from JSON.
func (x *FileResource_ResourceType) UnmarshalProtoJSON(s *json.UnmarshalState) {
	v := s.ReadEnum(FileResource_ResourceType_value)
	if err := s.Err(); err != nil {
		s.SetErrorf("could not read ResourceType enum: %v", err)
		return
	}
	*x = FileResource_ResourceType(v)
}

// UnmarshalText unmarshals the FileResource_ResourceType from text.
func (x *FileResource_ResourceType) UnmarshalText(b []byte) error {
	i, err := json.ParseEnumString(string(b), FileResource_ResourceType_value)
	if err != nil {
		return err
	}
	*x = FileResource_ResourceType(i)
	return nil
}

// UnmarshalJSON unmarshals the FileResource_ResourceType from JSON.
func (x *FileResource_ResourceType) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileResource_FileResourceData_HeaderEntry message to JSON.
func (x *FileResource_FileResourceData_HeaderEntry) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Key != "" || s.HasField("key") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("key")
		s.WriteString(x.Key)
	}
	if x.Value != "" || s.HasField("value") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("value")
		s.WriteString(x.Value)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the FileResource_FileResourceData_HeaderEntry to JSON.
func (x *FileResource_FileResourceData_HeaderEntry) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileResource_FileResourceData_HeaderEntry message from JSON.
func (x *FileResource_FileResourceData_HeaderEntry) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "key":
			s.AddField("key")
			x.Key = s.ReadString()
		case "value":
			s.AddField("value")
			x.Value = s.ReadString()
		}
	})
}

// UnmarshalJSON unmarshals the FileResource_FileResourceData_HeaderEntry from JSON.
func (x *FileResource_FileResourceData_HeaderEntry) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileResource_FileResourceData message to JSON.
func (x *FileResource_FileResourceData) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.Url != "" || s.HasField("url") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("url")
		s.WriteString(x.Url)
	}
	if x.Resolution != 0 || s.HasField("resolution") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("resolution")
		x.Resolution.MarshalProtoJSON(s)
	}
	if x.ExpireTime != 0 || s.HasField("expireTime") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("expireTime")
		s.WriteUint64(x.ExpireTime)
	}
	if x.ResourceType != 0 || s.HasField("resourceType") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("resourceType")
		x.ResourceType.MarshalProtoJSON(s)
	}
	if x.Title != "" || s.HasField("title") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("title")
		s.WriteString(x.Title)
	}
	if x.Header != nil || s.HasField("header") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("header")
		s.WriteObjectStart()
		var wroteElement bool
		for k, v := range x.Header {
			s.WriteMoreIf(&wroteElement)
			s.WriteObjectStringField(k)
			s.WriteString(v)
		}
		s.WriteObjectEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the FileResource_FileResourceData to JSON.
func (x *FileResource_FileResourceData) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileResource_FileResourceData message from JSON.
func (x *FileResource_FileResourceData) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "url":
			s.AddField("url")
			x.Url = s.ReadString()
		case "resolution":
			s.AddField("resolution")
			x.Resolution.UnmarshalProtoJSON(s)
		case "expire_time", "expireTime":
			s.AddField("expire_time")
			x.ExpireTime = s.ReadUint64()
		case "resource_type", "resourceType":
			s.AddField("resource_type")
			x.ResourceType.UnmarshalProtoJSON(s)
		case "title":
			s.AddField("title")
			x.Title = s.ReadString()
		case "header":
			s.AddField("header")
			if s.ReadNil() {
				x.Header = nil
				return
			}
			x.Header = make(map[string]string)
			s.ReadStringMap(func(key string) {
				x.Header[key] = s.ReadString()
			})
		}
	})
}

// UnmarshalJSON unmarshals the FileResource_FileResourceData from JSON.
func (x *FileResource_FileResourceData) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the FileResource message to JSON.
func (x *FileResource) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.FileResourceData) > 0 || s.HasField("fileResourceData") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("fileResourceData")
		s.WriteArrayStart()
		var wroteElement bool
		for _, element := range x.FileResourceData {
			s.WriteMoreIf(&wroteElement)
			element.MarshalProtoJSON(s.WithField("fileResourceData"))
		}
		s.WriteArrayEnd()
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the FileResource to JSON.
func (x *FileResource) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the FileResource message from JSON.
func (x *FileResource) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "file_resource_data", "fileResourceData":
			s.AddField("file_resource_data")
			if s.ReadNil() {
				x.FileResourceData = nil
				return
			}
			s.ReadArray(func() {
				if s.ReadNil() {
					x.FileResourceData = append(x.FileResourceData, nil)
					return
				}
				v := &FileResource_FileResourceData{}
				v.UnmarshalProtoJSON(s.WithField("file_resource_data", false))
				if s.Err() != nil {
					return
				}
				x.FileResourceData = append(x.FileResourceData, v)
			})
		}
	})
}

// UnmarshalJSON unmarshals the FileResource from JSON.
func (x *FileResource) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the AuthData message to JSON.
func (x *AuthData) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if len(x.AuthDataBytes) > 0 || s.HasField("authDataBytes") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("authDataBytes")
		s.WriteBytes(x.AuthDataBytes)
	}
	if x.AuthDataExpiredTime != 0 || s.HasField("authDataExpiredTime") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("authDataExpiredTime")
		s.WriteUint64(x.AuthDataExpiredTime)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the AuthData to JSON.
func (x *AuthData) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the AuthData message from JSON.
func (x *AuthData) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "auth_data_bytes", "authDataBytes":
			s.AddField("auth_data_bytes")
			x.AuthDataBytes = s.ReadBytes()
		case "auth_data_expired_time", "authDataExpiredTime":
			s.AddField("auth_data_expired_time")
			x.AuthDataExpiredTime = s.ReadUint64()
		}
	})
}

// UnmarshalJSON unmarshals the AuthData from JSON.
func (x *AuthData) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the OauthConfig message to JSON.
func (x *OauthConfig) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.ClientId != "" || s.HasField("clientId") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("clientId")
		s.WriteString(x.ClientId)
	}
	if x.ClientSecret != "" || s.HasField("clientSecret") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("clientSecret")
		s.WriteString(x.ClientSecret)
	}
	if x.RedirectUri != "" || s.HasField("redirectUri") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("redirectUri")
		s.WriteString(x.RedirectUri)
	}
	if len(x.Scopes) > 0 || s.HasField("scopes") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("scopes")
		s.WriteStringArray(x.Scopes)
	}
	if x.AuthUrl != "" || s.HasField("authUrl") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("authUrl")
		s.WriteString(x.AuthUrl)
	}
	if x.QrcodeUrl != "" || s.HasField("qrcodeUrl") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("qrcodeUrl")
		s.WriteString(x.QrcodeUrl)
	}
	if x.TokenUrl != "" || s.HasField("tokenUrl") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("tokenUrl")
		s.WriteString(x.TokenUrl)
	}
	if x.TokenReqType != "" || s.HasField("tokenReqType") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("tokenReqType")
		s.WriteString(x.TokenReqType)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the OauthConfig to JSON.
func (x *OauthConfig) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the OauthConfig message from JSON.
func (x *OauthConfig) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "client_id", "clientId":
			s.AddField("client_id")
			x.ClientId = s.ReadString()
		case "client_secret", "clientSecret":
			s.AddField("client_secret")
			x.ClientSecret = s.ReadString()
		case "redirect_uri", "redirectUri":
			s.AddField("redirect_uri")
			x.RedirectUri = s.ReadString()
		case "scopes":
			s.AddField("scopes")
			if s.ReadNil() {
				x.Scopes = nil
				return
			}
			x.Scopes = s.ReadStringArray()
		case "auth_url", "authUrl":
			s.AddField("auth_url")
			x.AuthUrl = s.ReadString()
		case "qrcode_url", "qrcodeUrl":
			s.AddField("qrcode_url")
			x.QrcodeUrl = s.ReadString()
		case "token_url", "tokenUrl":
			s.AddField("token_url")
			x.TokenUrl = s.ReadString()
		case "token_req_type", "tokenReqType":
			s.AddField("token_req_type")
			x.TokenReqType = s.ReadString()
		}
	})
}

// UnmarshalJSON unmarshals the OauthConfig from JSON.
func (x *OauthConfig) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

// MarshalProtoJSON marshals the Token message to JSON.
func (x *Token) MarshalProtoJSON(s *json.MarshalState) {
	if x == nil {
		s.WriteNil()
		return
	}
	s.WriteObjectStart()
	var wroteField bool
	if x.TokenType != "" || s.HasField("tokenType") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("tokenType")
		s.WriteString(x.TokenType)
	}
	if x.AccessToken != "" || s.HasField("accessToken") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("accessToken")
		s.WriteString(x.AccessToken)
	}
	if x.RefreshToken != "" || s.HasField("refreshToken") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("refreshToken")
		s.WriteString(x.RefreshToken)
	}
	if x.ExpiresIn != 0 || s.HasField("expiresIn") {
		s.WriteMoreIf(&wroteField)
		s.WriteObjectField("expiresIn")
		s.WriteUint64(x.ExpiresIn)
	}
	s.WriteObjectEnd()
}

// MarshalJSON marshals the Token to JSON.
func (x *Token) MarshalJSON() ([]byte, error) {
	return json.DefaultMarshalerConfig.Marshal(x)
}

// UnmarshalProtoJSON unmarshals the Token message from JSON.
func (x *Token) UnmarshalProtoJSON(s *json.UnmarshalState) {
	if s.ReadNil() {
		return
	}
	s.ReadObject(func(key string) {
		switch key {
		default:
			s.Skip() // ignore unknown field
		case "token_type", "tokenType":
			s.AddField("token_type")
			x.TokenType = s.ReadString()
		case "access_token", "accessToken":
			s.AddField("access_token")
			x.AccessToken = s.ReadString()
		case "refresh_token", "refreshToken":
			s.AddField("refresh_token")
			x.RefreshToken = s.ReadString()
		case "expires_in", "expiresIn":
			s.AddField("expires_in")
			x.ExpiresIn = s.ReadUint64()
		}
	})
}

// UnmarshalJSON unmarshals the Token from JSON.
func (x *Token) UnmarshalJSON(b []byte) error {
	return json.DefaultUnmarshalerConfig.Unmarshal(b, x)
}

func (m *Formdata_FormItem) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formdata_FormItem) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if vtmsg, ok := m.Value.(interface {
		MarshalToSizedBufferVT([]byte) (int, error)
	}); ok {
		size, err := vtmsg.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if len(m.EnumValues) > 0 {
		for iNdEx := len(m.EnumValues) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.EnumValues[iNdEx].MarshalToSizedBufferVT(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Formdata_FormItem_DoubleValue) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_DoubleValue) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DoubleValue != nil {
		size, err := m.DoubleValue.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x12
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_Int64Value) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_Int64Value) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Int64Value != nil {
		size, err := m.Int64Value.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x1a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_BoolValue) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_BoolValue) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.BoolValue != nil {
		size, err := m.BoolValue.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x22
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_StringValue) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_StringValue) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StringValue != nil {
		size, err := m.StringValue.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x2a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_ObscureStringValue) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_ObscureStringValue) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ObscureStringValue != nil {
		size, err := m.ObscureStringValue.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x32
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_DirPathValue) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_DirPathValue) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DirPathValue != nil {
		size, err := m.DirPathValue.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x3a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_FilePathValue) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata_FormItem_FilePathValue) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FilePathValue != nil {
		size, err := m.FilePathValue.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x42
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *Formdata) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formdata) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Formdata) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.FormItems) > 0 {
		for iNdEx := len(m.FormItems) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.FormItems[iNdEx].MarshalToSizedBufferVT(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x5a
		}
	}
	return len(dAtA) - i, nil
}

func (m *Scanqrcode) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scanqrcode) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Scanqrcode) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.QrcodeExpireTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.QrcodeExpireTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.QrcodeImageParam) > 0 {
		i -= len(m.QrcodeImageParam)
		copy(dAtA[i:], m.QrcodeImageParam)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.QrcodeImageParam)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.QrcodeImage) > 0 {
		i -= len(m.QrcodeImage)
		copy(dAtA[i:], m.QrcodeImage)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.QrcodeImage)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Callback) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Callback) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Callback) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.CallbackUrlData) > 0 {
		i -= len(m.CallbackUrlData)
		copy(dAtA[i:], m.CallbackUrlData)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.CallbackUrlData)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CallbackUrlParam) > 0 {
		i -= len(m.CallbackUrlParam)
		copy(dAtA[i:], m.CallbackUrlParam)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.CallbackUrlParam)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CallbackUrl) > 0 {
		i -= len(m.CallbackUrl)
		copy(dAtA[i:], m.CallbackUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.CallbackUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Refresh) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Refresh) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Refresh) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.AuthData != nil {
		size, err := m.AuthData.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuthMethod) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthMethod) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *AuthMethod) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if vtmsg, ok := m.Method.(interface {
		MarshalToSizedBufferVT([]byte) (int, error)
	}); ok {
		size, err := vtmsg.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	return len(dAtA) - i, nil
}

func (m *AuthMethod_Formdata) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *AuthMethod_Formdata) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Formdata != nil {
		size, err := m.Formdata.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0xa
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *AuthMethod_Scanqrcode) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *AuthMethod_Scanqrcode) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Scanqrcode != nil {
		size, err := m.Scanqrcode.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x12
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *AuthMethod_Callback) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *AuthMethod_Callback) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Callback != nil {
		size, err := m.Callback.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x1a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *AuthMethod_Refresh) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *AuthMethod_Refresh) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Refresh != nil {
		size, err := m.Refresh.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x22
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *Auth) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Auth) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Auth) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.AuthMethods) > 0 {
		for iNdEx := len(m.AuthMethods) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.AuthMethods[iNdEx].MarshalToSizedBufferVT(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *FileEntry) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileEntry) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *FileEntry) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.AccessedTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.AccessedTime))
		i--
		dAtA[i] = 0x60
	}
	if m.ModifiedTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ModifiedTime))
		i--
		dAtA[i] = 0x58
	}
	if m.CreatedTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.CreatedTime))
		i--
		dAtA[i] = 0x50
	}
	if len(m.RawData) > 0 {
		i -= len(m.RawData)
		copy(dAtA[i:], m.RawData)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.RawData)))
		i--
		dAtA[i] = 0x22
	}
	if m.Size != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.Size))
		i--
		dAtA[i] = 0x18
	}
	if m.FileType != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.FileType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DirEntry) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DirEntry) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *DirEntry) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.DirPageKey) > 0 {
		i -= len(m.DirPageKey)
		copy(dAtA[i:], m.DirPageKey)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.DirPageKey)))
		i--
		dAtA[i] = 0x52
	}
	if m.PageSize != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if len(m.FileEntries) > 0 {
		for iNdEx := len(m.FileEntries) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.FileEntries[iNdEx].MarshalToSizedBufferVT(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetDirEntryRequest) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDirEntryRequest) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *GetDirEntryRequest) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.DirPageKey) > 0 {
		i -= len(m.DirPageKey)
		copy(dAtA[i:], m.DirPageKey)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.DirPageKey)))
		i--
		dAtA[i] = 0x62
	}
	if m.FileEntry != nil {
		size, err := m.FileEntry.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x52
	}
	if m.PageSize != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetFileResourceRequest) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFileResourceRequest) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *GetFileResourceRequest) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.FileEntry != nil {
		size, err := m.FileEntry.MarshalToSizedBufferVT(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x52
	}
	if len(m.FilePath) > 0 {
		i -= len(m.FilePath)
		copy(dAtA[i:], m.FilePath)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.FilePath)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FileResource_FileResourceData) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileResource_FileResourceData) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *FileResource_FileResourceData) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.Header) > 0 {
		for k := range m.Header {
			v := m.Header[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ResourceType != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ResourceType))
		i--
		dAtA[i] = 0x20
	}
	if m.ExpireTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ExpireTime))
		i--
		dAtA[i] = 0x18
	}
	if m.Resolution != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.Resolution))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FileResource) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileResource) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *FileResource) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.FileResourceData) > 0 {
		for iNdEx := len(m.FileResourceData) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.FileResourceData[iNdEx].MarshalToSizedBufferVT(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AuthData) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthData) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *AuthData) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.AuthDataExpiredTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.AuthDataExpiredTime))
		i--
		dAtA[i] = 0x10
	}
	if len(m.AuthDataBytes) > 0 {
		i -= len(m.AuthDataBytes)
		copy(dAtA[i:], m.AuthDataBytes)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.AuthDataBytes)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OauthConfig) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OauthConfig) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *OauthConfig) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.TokenReqType) > 0 {
		i -= len(m.TokenReqType)
		copy(dAtA[i:], m.TokenReqType)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.TokenReqType)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TokenUrl) > 0 {
		i -= len(m.TokenUrl)
		copy(dAtA[i:], m.TokenUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.TokenUrl)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.QrcodeUrl) > 0 {
		i -= len(m.QrcodeUrl)
		copy(dAtA[i:], m.QrcodeUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.QrcodeUrl)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AuthUrl) > 0 {
		i -= len(m.AuthUrl)
		copy(dAtA[i:], m.AuthUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.AuthUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scopes) > 0 {
		for iNdEx := len(m.Scopes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Scopes[iNdEx])
			copy(dAtA[i:], m.Scopes[iNdEx])
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Scopes[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.RedirectUri) > 0 {
		i -= len(m.RedirectUri)
		copy(dAtA[i:], m.RedirectUri)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.RedirectUri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClientSecret) > 0 {
		i -= len(m.ClientSecret)
		copy(dAtA[i:], m.ClientSecret)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.ClientSecret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Token) MarshalVT() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVT(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Token) MarshalToVT(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVT(dAtA[:size])
}

func (m *Token) MarshalToSizedBufferVT(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.ExpiresIn != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ExpiresIn))
		i--
		dAtA[i] = 0x20
	}
	if len(m.RefreshToken) > 0 {
		i -= len(m.RefreshToken)
		copy(dAtA[i:], m.RefreshToken)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.RefreshToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TokenType) > 0 {
		i -= len(m.TokenType)
		copy(dAtA[i:], m.TokenType)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.TokenType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Formdata_FormItem) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formdata_FormItem) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.EnumValues) > 0 {
		for iNdEx := len(m.EnumValues) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.EnumValues[iNdEx].MarshalToSizedBufferVTStrict(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x52
		}
	}
	if msg, ok := m.Value.(*Formdata_FormItem_FilePathValue); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Value.(*Formdata_FormItem_DirPathValue); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Value.(*Formdata_FormItem_ObscureStringValue); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Value.(*Formdata_FormItem_StringValue); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Value.(*Formdata_FormItem_BoolValue); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Value.(*Formdata_FormItem_Int64Value); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Value.(*Formdata_FormItem_DoubleValue); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Formdata_FormItem_DoubleValue) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_DoubleValue) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DoubleValue != nil {
		size, err := m.DoubleValue.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x12
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_Int64Value) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_Int64Value) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Int64Value != nil {
		size, err := m.Int64Value.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x1a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_BoolValue) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_BoolValue) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.BoolValue != nil {
		size, err := m.BoolValue.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x22
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_StringValue) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_StringValue) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StringValue != nil {
		size, err := m.StringValue.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x2a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_ObscureStringValue) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_ObscureStringValue) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ObscureStringValue != nil {
		size, err := m.ObscureStringValue.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x32
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_DirPathValue) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_DirPathValue) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DirPathValue != nil {
		size, err := m.DirPathValue.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x3a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *Formdata_FormItem_FilePathValue) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata_FormItem_FilePathValue) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FilePathValue != nil {
		size, err := m.FilePathValue.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x42
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *Formdata) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Formdata) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Formdata) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.FormItems) > 0 {
		for iNdEx := len(m.FormItems) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.FormItems[iNdEx].MarshalToSizedBufferVTStrict(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0x5a
		}
	}
	return len(dAtA) - i, nil
}

func (m *Scanqrcode) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scanqrcode) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Scanqrcode) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.QrcodeExpireTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.QrcodeExpireTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.QrcodeImageParam) > 0 {
		i -= len(m.QrcodeImageParam)
		copy(dAtA[i:], m.QrcodeImageParam)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.QrcodeImageParam)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.QrcodeImage) > 0 {
		i -= len(m.QrcodeImage)
		copy(dAtA[i:], m.QrcodeImage)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.QrcodeImage)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Callback) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Callback) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Callback) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.CallbackUrlData) > 0 {
		i -= len(m.CallbackUrlData)
		copy(dAtA[i:], m.CallbackUrlData)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.CallbackUrlData)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CallbackUrlParam) > 0 {
		i -= len(m.CallbackUrlParam)
		copy(dAtA[i:], m.CallbackUrlParam)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.CallbackUrlParam)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CallbackUrl) > 0 {
		i -= len(m.CallbackUrl)
		copy(dAtA[i:], m.CallbackUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.CallbackUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Refresh) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Refresh) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Refresh) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.AuthData != nil {
		size, err := m.AuthData.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuthMethod) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthMethod) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *AuthMethod) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if msg, ok := m.Method.(*AuthMethod_Refresh); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Method.(*AuthMethod_Callback); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Method.(*AuthMethod_Scanqrcode); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	if msg, ok := m.Method.(*AuthMethod_Formdata); ok {
		size, err := msg.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
	}
	return len(dAtA) - i, nil
}

func (m *AuthMethod_Formdata) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *AuthMethod_Formdata) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Formdata != nil {
		size, err := m.Formdata.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0xa
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *AuthMethod_Scanqrcode) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *AuthMethod_Scanqrcode) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Scanqrcode != nil {
		size, err := m.Scanqrcode.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x12
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *AuthMethod_Callback) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *AuthMethod_Callback) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Callback != nil {
		size, err := m.Callback.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x1a
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *AuthMethod_Refresh) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *AuthMethod_Refresh) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Refresh != nil {
		size, err := m.Refresh.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x22
	} else {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, 0)
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *Auth) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Auth) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Auth) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.AuthMethods) > 0 {
		for iNdEx := len(m.AuthMethods) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.AuthMethods[iNdEx].MarshalToSizedBufferVTStrict(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *FileEntry) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileEntry) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *FileEntry) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.AccessedTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.AccessedTime))
		i--
		dAtA[i] = 0x60
	}
	if m.ModifiedTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ModifiedTime))
		i--
		dAtA[i] = 0x58
	}
	if m.CreatedTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.CreatedTime))
		i--
		dAtA[i] = 0x50
	}
	if len(m.RawData) > 0 {
		i -= len(m.RawData)
		copy(dAtA[i:], m.RawData)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.RawData)))
		i--
		dAtA[i] = 0x22
	}
	if m.Size != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.Size))
		i--
		dAtA[i] = 0x18
	}
	if m.FileType != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.FileType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DirEntry) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DirEntry) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *DirEntry) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.DirPageKey) > 0 {
		i -= len(m.DirPageKey)
		copy(dAtA[i:], m.DirPageKey)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.DirPageKey)))
		i--
		dAtA[i] = 0x52
	}
	if m.PageSize != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if len(m.FileEntries) > 0 {
		for iNdEx := len(m.FileEntries) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.FileEntries[iNdEx].MarshalToSizedBufferVTStrict(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetDirEntryRequest) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDirEntryRequest) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *GetDirEntryRequest) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.DirPageKey) > 0 {
		i -= len(m.DirPageKey)
		copy(dAtA[i:], m.DirPageKey)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.DirPageKey)))
		i--
		dAtA[i] = 0x62
	}
	if m.FileEntry != nil {
		size, err := m.FileEntry.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x52
	}
	if m.PageSize != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetFileResourceRequest) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFileResourceRequest) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *GetFileResourceRequest) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.FileEntry != nil {
		size, err := m.FileEntry.MarshalToSizedBufferVTStrict(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
		i--
		dAtA[i] = 0x52
	}
	if len(m.FilePath) > 0 {
		i -= len(m.FilePath)
		copy(dAtA[i:], m.FilePath)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.FilePath)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FileResource_FileResourceData) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileResource_FileResourceData) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *FileResource_FileResourceData) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.Header) > 0 {
		for k := range m.Header {
			v := m.Header[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ResourceType != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ResourceType))
		i--
		dAtA[i] = 0x20
	}
	if m.ExpireTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ExpireTime))
		i--
		dAtA[i] = 0x18
	}
	if m.Resolution != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.Resolution))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FileResource) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileResource) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *FileResource) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.FileResourceData) > 0 {
		for iNdEx := len(m.FileResourceData) - 1; iNdEx >= 0; iNdEx-- {
			size, err := m.FileResourceData[iNdEx].MarshalToSizedBufferVTStrict(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(size))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AuthData) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthData) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *AuthData) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.AuthDataExpiredTime != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.AuthDataExpiredTime))
		i--
		dAtA[i] = 0x10
	}
	if len(m.AuthDataBytes) > 0 {
		i -= len(m.AuthDataBytes)
		copy(dAtA[i:], m.AuthDataBytes)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.AuthDataBytes)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OauthConfig) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OauthConfig) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *OauthConfig) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if len(m.TokenReqType) > 0 {
		i -= len(m.TokenReqType)
		copy(dAtA[i:], m.TokenReqType)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.TokenReqType)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TokenUrl) > 0 {
		i -= len(m.TokenUrl)
		copy(dAtA[i:], m.TokenUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.TokenUrl)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.QrcodeUrl) > 0 {
		i -= len(m.QrcodeUrl)
		copy(dAtA[i:], m.QrcodeUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.QrcodeUrl)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AuthUrl) > 0 {
		i -= len(m.AuthUrl)
		copy(dAtA[i:], m.AuthUrl)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.AuthUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scopes) > 0 {
		for iNdEx := len(m.Scopes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Scopes[iNdEx])
			copy(dAtA[i:], m.Scopes[iNdEx])
			i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.Scopes[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.RedirectUri) > 0 {
		i -= len(m.RedirectUri)
		copy(dAtA[i:], m.RedirectUri)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.RedirectUri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClientSecret) > 0 {
		i -= len(m.ClientSecret)
		copy(dAtA[i:], m.ClientSecret)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.ClientSecret)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ClientId) > 0 {
		i -= len(m.ClientId)
		copy(dAtA[i:], m.ClientId)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.ClientId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Token) MarshalVTStrict() (dAtA []byte, err error) {
	if m == nil {
		return nil, nil
	}
	size := m.SizeVT()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBufferVTStrict(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Token) MarshalToVTStrict(dAtA []byte) (int, error) {
	size := m.SizeVT()
	return m.MarshalToSizedBufferVTStrict(dAtA[:size])
}

func (m *Token) MarshalToSizedBufferVTStrict(dAtA []byte) (int, error) {
	if m == nil {
		return 0, nil
	}
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.unknownFields != nil {
		i -= len(m.unknownFields)
		copy(dAtA[i:], m.unknownFields)
	}
	if m.ExpiresIn != 0 {
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(m.ExpiresIn))
		i--
		dAtA[i] = 0x20
	}
	if len(m.RefreshToken) > 0 {
		i -= len(m.RefreshToken)
		copy(dAtA[i:], m.RefreshToken)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.RefreshToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TokenType) > 0 {
		i -= len(m.TokenType)
		copy(dAtA[i:], m.TokenType)
		i = protobuf_go_lite.EncodeVarint(dAtA, i, uint64(len(m.TokenType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Formdata_FormItem) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if vtmsg, ok := m.Value.(interface{ SizeVT() int }); ok {
		n += vtmsg.SizeVT()
	}
	if len(m.EnumValues) > 0 {
		for _, e := range m.EnumValues {
			l = e.SizeVT()
			n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
		}
	}
	n += len(m.unknownFields)
	return n
}

func (m *Formdata_FormItem_DoubleValue) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DoubleValue != nil {
		l = m.DoubleValue.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata_FormItem_Int64Value) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Int64Value != nil {
		l = m.Int64Value.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata_FormItem_BoolValue) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BoolValue != nil {
		l = m.BoolValue.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata_FormItem_StringValue) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StringValue != nil {
		l = m.StringValue.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata_FormItem_ObscureStringValue) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ObscureStringValue != nil {
		l = m.ObscureStringValue.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata_FormItem_DirPathValue) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DirPathValue != nil {
		l = m.DirPathValue.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata_FormItem_FilePathValue) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FilePathValue != nil {
		l = m.FilePathValue.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Formdata) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FormItems) > 0 {
		for _, e := range m.FormItems {
			l = e.SizeVT()
			n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
		}
	}
	n += len(m.unknownFields)
	return n
}

func (m *Scanqrcode) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.QrcodeImage)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.QrcodeImageParam)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.QrcodeExpireTime != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.QrcodeExpireTime))
	}
	n += len(m.unknownFields)
	return n
}

func (m *Callback) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CallbackUrl)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.CallbackUrlParam)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.CallbackUrlData)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	n += len(m.unknownFields)
	return n
}

func (m *Refresh) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthData != nil {
		l = m.AuthData.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	n += len(m.unknownFields)
	return n
}

func (m *AuthMethod) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if vtmsg, ok := m.Method.(interface{ SizeVT() int }); ok {
		n += vtmsg.SizeVT()
	}
	n += len(m.unknownFields)
	return n
}

func (m *AuthMethod_Formdata) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Formdata != nil {
		l = m.Formdata.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *AuthMethod_Scanqrcode) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Scanqrcode != nil {
		l = m.Scanqrcode.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *AuthMethod_Callback) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Callback != nil {
		l = m.Callback.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *AuthMethod_Refresh) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Refresh != nil {
		l = m.Refresh.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	} else {
		n += 2
	}
	return n
}
func (m *Auth) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AuthMethods) > 0 {
		for _, e := range m.AuthMethods {
			l = e.SizeVT()
			n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
		}
	}
	n += len(m.unknownFields)
	return n
}

func (m *FileEntry) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.FileType != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.FileType))
	}
	if m.Size != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.Size))
	}
	l = len(m.RawData)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.CreatedTime != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.CreatedTime))
	}
	if m.ModifiedTime != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.ModifiedTime))
	}
	if m.AccessedTime != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.AccessedTime))
	}
	n += len(m.unknownFields)
	return n
}

func (m *DirEntry) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FileEntries) > 0 {
		for _, e := range m.FileEntries {
			l = e.SizeVT()
			n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
		}
	}
	if m.PageSize != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.PageSize))
	}
	l = len(m.DirPageKey)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	n += len(m.unknownFields)
	return n
}

func (m *GetDirEntryRequest) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.PageSize))
	}
	if m.FileEntry != nil {
		l = m.FileEntry.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.DirPageKey)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	n += len(m.unknownFields)
	return n
}

func (m *GetFileResourceRequest) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FilePath)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.FileEntry != nil {
		l = m.FileEntry.SizeVT()
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	n += len(m.unknownFields)
	return n
}

func (m *FileResource_FileResourceData) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.Resolution != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.Resolution))
	}
	if m.ExpireTime != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.ExpireTime))
	}
	if m.ResourceType != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.ResourceType))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if len(m.Header) > 0 {
		for k, v := range m.Header {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + protobuf_go_lite.SizeOfVarint(uint64(len(k))) + 1 + len(v) + protobuf_go_lite.SizeOfVarint(uint64(len(v)))
			n += mapEntrySize + 1 + protobuf_go_lite.SizeOfVarint(uint64(mapEntrySize))
		}
	}
	n += len(m.unknownFields)
	return n
}

func (m *FileResource) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.FileResourceData) > 0 {
		for _, e := range m.FileResourceData {
			l = e.SizeVT()
			n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
		}
	}
	n += len(m.unknownFields)
	return n
}

func (m *AuthData) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthDataBytes)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.AuthDataExpiredTime != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.AuthDataExpiredTime))
	}
	n += len(m.unknownFields)
	return n
}

func (m *OauthConfig) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientId)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.ClientSecret)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.RedirectUri)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if len(m.Scopes) > 0 {
		for _, s := range m.Scopes {
			l = len(s)
			n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
		}
	}
	l = len(m.AuthUrl)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.QrcodeUrl)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.TokenUrl)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.TokenReqType)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	n += len(m.unknownFields)
	return n
}

func (m *Token) SizeVT() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TokenType)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	l = len(m.RefreshToken)
	if l > 0 {
		n += 1 + l + protobuf_go_lite.SizeOfVarint(uint64(l))
	}
	if m.ExpiresIn != 0 {
		n += 1 + protobuf_go_lite.SizeOfVarint(uint64(m.ExpiresIn))
	}
	n += len(m.unknownFields)
	return n
}

func (x *Formdata_FormItem) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("FormItem {")
	if x.Name != "" {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("name: ")
		sb.WriteString(strconv.Quote(x.Name))
	}
	switch body := x.Value.(type) {
	case *Formdata_FormItem_DoubleValue:
		if body.DoubleValue != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("double_value: ")
			sb.WriteString(body.DoubleValue.MarshalProtoText())
		}
	case *Formdata_FormItem_Int64Value:
		if body.Int64Value != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("int64_value: ")
			sb.WriteString(body.Int64Value.MarshalProtoText())
		}
	case *Formdata_FormItem_BoolValue:
		if body.BoolValue != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("bool_value: ")
			sb.WriteString(body.BoolValue.MarshalProtoText())
		}
	case *Formdata_FormItem_StringValue:
		if body.StringValue != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("string_value: ")
			sb.WriteString(body.StringValue.MarshalProtoText())
		}
	case *Formdata_FormItem_ObscureStringValue:
		if body.ObscureStringValue != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("obscure_string_value: ")
			sb.WriteString(body.ObscureStringValue.MarshalProtoText())
		}
	case *Formdata_FormItem_DirPathValue:
		if body.DirPathValue != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("dir_path_value: ")
			sb.WriteString(body.DirPathValue.MarshalProtoText())
		}
	case *Formdata_FormItem_FilePathValue:
		if body.FilePathValue != nil {
			if sb.Len() > 10 {
				sb.WriteString(" ")
			}
			sb.WriteString("file_path_value: ")
			sb.WriteString(body.FilePathValue.MarshalProtoText())
		}
	}
	if len(x.EnumValues) > 0 {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("enum_values: [")
		for i, v := range x.EnumValues {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(v.MarshalProtoText())
		}
		sb.WriteString("]")
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Formdata_FormItem) String() string {
	return x.MarshalProtoText()
}
func (x *Formdata) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("Formdata {")
	if len(x.FormItems) > 0 {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("form_items: [")
		for i, v := range x.FormItems {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(v.MarshalProtoText())
		}
		sb.WriteString("]")
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Formdata) String() string {
	return x.MarshalProtoText()
}
func (x *Scanqrcode) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("Scanqrcode {")
	if x.QrcodeImage != nil {
		if sb.Len() > 12 {
			sb.WriteString(" ")
		}
		sb.WriteString("qrcode_image: ")
		sb.WriteString("\"")
		sb.WriteString(base64.StdEncoding.EncodeToString(x.QrcodeImage))
		sb.WriteString("\"")
	}
	if x.QrcodeImageParam != "" {
		if sb.Len() > 12 {
			sb.WriteString(" ")
		}
		sb.WriteString("qrcode_image_param: ")
		sb.WriteString(strconv.Quote(x.QrcodeImageParam))
	}
	if x.QrcodeExpireTime != 0 {
		if sb.Len() > 12 {
			sb.WriteString(" ")
		}
		sb.WriteString("qrcode_expire_time: ")
		sb.WriteString(strconv.FormatUint(uint64(x.QrcodeExpireTime), 10))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Scanqrcode) String() string {
	return x.MarshalProtoText()
}
func (x *Callback) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("Callback {")
	if x.CallbackUrl != "" {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("callback_url: ")
		sb.WriteString(strconv.Quote(x.CallbackUrl))
	}
	if x.CallbackUrlParam != "" {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("callback_url_param: ")
		sb.WriteString(strconv.Quote(x.CallbackUrlParam))
	}
	if x.CallbackUrlData != "" {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("callback_url_data: ")
		sb.WriteString(strconv.Quote(x.CallbackUrlData))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Callback) String() string {
	return x.MarshalProtoText()
}
func (x *Refresh) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("Refresh {")
	if x.AuthData != nil {
		if sb.Len() > 9 {
			sb.WriteString(" ")
		}
		sb.WriteString("auth_data: ")
		sb.WriteString(x.AuthData.MarshalProtoText())
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Refresh) String() string {
	return x.MarshalProtoText()
}
func (x *AuthMethod) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("AuthMethod {")
	switch body := x.Method.(type) {
	case *AuthMethod_Formdata:
		if body.Formdata != nil {
			if sb.Len() > 12 {
				sb.WriteString(" ")
			}
			sb.WriteString("formdata: ")
			sb.WriteString(body.Formdata.MarshalProtoText())
		}
	case *AuthMethod_Scanqrcode:
		if body.Scanqrcode != nil {
			if sb.Len() > 12 {
				sb.WriteString(" ")
			}
			sb.WriteString("scanqrcode: ")
			sb.WriteString(body.Scanqrcode.MarshalProtoText())
		}
	case *AuthMethod_Callback:
		if body.Callback != nil {
			if sb.Len() > 12 {
				sb.WriteString(" ")
			}
			sb.WriteString("callback: ")
			sb.WriteString(body.Callback.MarshalProtoText())
		}
	case *AuthMethod_Refresh:
		if body.Refresh != nil {
			if sb.Len() > 12 {
				sb.WriteString(" ")
			}
			sb.WriteString("refresh: ")
			sb.WriteString(body.Refresh.MarshalProtoText())
		}
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *AuthMethod) String() string {
	return x.MarshalProtoText()
}
func (x *Auth) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("Auth {")
	if len(x.AuthMethods) > 0 {
		if sb.Len() > 6 {
			sb.WriteString(" ")
		}
		sb.WriteString("auth_methods: [")
		for i, v := range x.AuthMethods {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(v.MarshalProtoText())
		}
		sb.WriteString("]")
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Auth) String() string {
	return x.MarshalProtoText()
}
func (x FileEntry_FileType) MarshalProtoText() string {
	return x.String()
}
func (x *FileEntry) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("FileEntry {")
	if x.Name != "" {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("name: ")
		sb.WriteString(strconv.Quote(x.Name))
	}
	if x.FileType != 0 {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("file_type: ")
		sb.WriteString("\"")
		sb.WriteString(FileEntry_FileType(x.FileType).String())
		sb.WriteString("\"")
	}
	if x.Size != 0 {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("size: ")
		sb.WriteString(strconv.FormatUint(uint64(x.Size), 10))
	}
	if x.RawData != nil {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("raw_data: ")
		sb.WriteString("\"")
		sb.WriteString(base64.StdEncoding.EncodeToString(x.RawData))
		sb.WriteString("\"")
	}
	if x.CreatedTime != 0 {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("created_time: ")
		sb.WriteString(strconv.FormatUint(uint64(x.CreatedTime), 10))
	}
	if x.ModifiedTime != 0 {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("modified_time: ")
		sb.WriteString(strconv.FormatUint(uint64(x.ModifiedTime), 10))
	}
	if x.AccessedTime != 0 {
		if sb.Len() > 11 {
			sb.WriteString(" ")
		}
		sb.WriteString("accessed_time: ")
		sb.WriteString(strconv.FormatUint(uint64(x.AccessedTime), 10))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *FileEntry) String() string {
	return x.MarshalProtoText()
}
func (x *DirEntry) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("DirEntry {")
	if len(x.FileEntries) > 0 {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("file_entries: [")
		for i, v := range x.FileEntries {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(v.MarshalProtoText())
		}
		sb.WriteString("]")
	}
	if x.PageSize != 0 {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("page_size: ")
		sb.WriteString(strconv.FormatUint(uint64(x.PageSize), 10))
	}
	if x.DirPageKey != "" {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("dir_page_key: ")
		sb.WriteString(strconv.Quote(x.DirPageKey))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *DirEntry) String() string {
	return x.MarshalProtoText()
}
func (x *GetDirEntryRequest) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("GetDirEntryRequest {")
	if x.Path != "" {
		if sb.Len() > 20 {
			sb.WriteString(" ")
		}
		sb.WriteString("path: ")
		sb.WriteString(strconv.Quote(x.Path))
	}
	if x.Page != 0 {
		if sb.Len() > 20 {
			sb.WriteString(" ")
		}
		sb.WriteString("page: ")
		sb.WriteString(strconv.FormatUint(uint64(x.Page), 10))
	}
	if x.PageSize != 0 {
		if sb.Len() > 20 {
			sb.WriteString(" ")
		}
		sb.WriteString("page_size: ")
		sb.WriteString(strconv.FormatUint(uint64(x.PageSize), 10))
	}
	if x.FileEntry != nil {
		if sb.Len() > 20 {
			sb.WriteString(" ")
		}
		sb.WriteString("file_entry: ")
		sb.WriteString(x.FileEntry.MarshalProtoText())
	}
	if x.DirPageKey != "" {
		if sb.Len() > 20 {
			sb.WriteString(" ")
		}
		sb.WriteString("dir_page_key: ")
		sb.WriteString(strconv.Quote(x.DirPageKey))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *GetDirEntryRequest) String() string {
	return x.MarshalProtoText()
}
func (x *GetFileResourceRequest) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("GetFileResourceRequest {")
	if x.FilePath != "" {
		if sb.Len() > 24 {
			sb.WriteString(" ")
		}
		sb.WriteString("file_path: ")
		sb.WriteString(strconv.Quote(x.FilePath))
	}
	if x.FileEntry != nil {
		if sb.Len() > 24 {
			sb.WriteString(" ")
		}
		sb.WriteString("file_entry: ")
		sb.WriteString(x.FileEntry.MarshalProtoText())
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *GetFileResourceRequest) String() string {
	return x.MarshalProtoText()
}
func (x FileResource_Resolution) MarshalProtoText() string {
	return x.String()
}
func (x FileResource_ResourceType) MarshalProtoText() string {
	return x.String()
}
func (x *FileResource_FileResourceData_HeaderEntry) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("HeaderEntry {")
	if x.Key != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("key: ")
		sb.WriteString(strconv.Quote(x.Key))
	}
	if x.Value != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("value: ")
		sb.WriteString(strconv.Quote(x.Value))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *FileResource_FileResourceData_HeaderEntry) String() string {
	return x.MarshalProtoText()
}
func (x *FileResource_FileResourceData) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("FileResourceData {")
	if x.Url != "" {
		if sb.Len() > 18 {
			sb.WriteString(" ")
		}
		sb.WriteString("url: ")
		sb.WriteString(strconv.Quote(x.Url))
	}
	if x.Resolution != 0 {
		if sb.Len() > 18 {
			sb.WriteString(" ")
		}
		sb.WriteString("resolution: ")
		sb.WriteString("\"")
		sb.WriteString(FileResource_Resolution(x.Resolution).String())
		sb.WriteString("\"")
	}
	if x.ExpireTime != 0 {
		if sb.Len() > 18 {
			sb.WriteString(" ")
		}
		sb.WriteString("expire_time: ")
		sb.WriteString(strconv.FormatUint(uint64(x.ExpireTime), 10))
	}
	if x.ResourceType != 0 {
		if sb.Len() > 18 {
			sb.WriteString(" ")
		}
		sb.WriteString("resource_type: ")
		sb.WriteString("\"")
		sb.WriteString(FileResource_ResourceType(x.ResourceType).String())
		sb.WriteString("\"")
	}
	if x.Title != "" {
		if sb.Len() > 18 {
			sb.WriteString(" ")
		}
		sb.WriteString("title: ")
		sb.WriteString(strconv.Quote(x.Title))
	}
	if len(x.Header) > 0 {
		if sb.Len() > 18 {
			sb.WriteString(" ")
		}
		sb.WriteString("header: {")
		for k, v := range x.Header {
			sb.WriteString(" ")
			sb.WriteString(strconv.Quote(k))
			sb.WriteString(": ")
			sb.WriteString(strconv.Quote(v))
		}
		sb.WriteString(" }")
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *FileResource_FileResourceData) String() string {
	return x.MarshalProtoText()
}
func (x *FileResource) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("FileResource {")
	if len(x.FileResourceData) > 0 {
		if sb.Len() > 14 {
			sb.WriteString(" ")
		}
		sb.WriteString("file_resource_data: [")
		for i, v := range x.FileResourceData {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(v.MarshalProtoText())
		}
		sb.WriteString("]")
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *FileResource) String() string {
	return x.MarshalProtoText()
}
func (x *AuthData) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("AuthData {")
	if x.AuthDataBytes != nil {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("auth_data_bytes: ")
		sb.WriteString("\"")
		sb.WriteString(base64.StdEncoding.EncodeToString(x.AuthDataBytes))
		sb.WriteString("\"")
	}
	if x.AuthDataExpiredTime != 0 {
		if sb.Len() > 10 {
			sb.WriteString(" ")
		}
		sb.WriteString("auth_data_expired_time: ")
		sb.WriteString(strconv.FormatUint(uint64(x.AuthDataExpiredTime), 10))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *AuthData) String() string {
	return x.MarshalProtoText()
}
func (x *OauthConfig) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("OauthConfig {")
	if x.ClientId != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("client_id: ")
		sb.WriteString(strconv.Quote(x.ClientId))
	}
	if x.ClientSecret != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("client_secret: ")
		sb.WriteString(strconv.Quote(x.ClientSecret))
	}
	if x.RedirectUri != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("redirect_uri: ")
		sb.WriteString(strconv.Quote(x.RedirectUri))
	}
	if len(x.Scopes) > 0 {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("scopes: [")
		for i, v := range x.Scopes {
			if i > 0 {
				sb.WriteString(", ")
			}
			sb.WriteString(strconv.Quote(v))
		}
		sb.WriteString("]")
	}
	if x.AuthUrl != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("auth_url: ")
		sb.WriteString(strconv.Quote(x.AuthUrl))
	}
	if x.QrcodeUrl != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("qrcode_url: ")
		sb.WriteString(strconv.Quote(x.QrcodeUrl))
	}
	if x.TokenUrl != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("token_url: ")
		sb.WriteString(strconv.Quote(x.TokenUrl))
	}
	if x.TokenReqType != "" {
		if sb.Len() > 13 {
			sb.WriteString(" ")
		}
		sb.WriteString("token_req_type: ")
		sb.WriteString(strconv.Quote(x.TokenReqType))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *OauthConfig) String() string {
	return x.MarshalProtoText()
}
func (x *Token) MarshalProtoText() string {
	var sb strings.Builder
	sb.WriteString("Token {")
	if x.TokenType != "" {
		if sb.Len() > 7 {
			sb.WriteString(" ")
		}
		sb.WriteString("token_type: ")
		sb.WriteString(strconv.Quote(x.TokenType))
	}
	if x.AccessToken != "" {
		if sb.Len() > 7 {
			sb.WriteString(" ")
		}
		sb.WriteString("access_token: ")
		sb.WriteString(strconv.Quote(x.AccessToken))
	}
	if x.RefreshToken != "" {
		if sb.Len() > 7 {
			sb.WriteString(" ")
		}
		sb.WriteString("refresh_token: ")
		sb.WriteString(strconv.Quote(x.RefreshToken))
	}
	if x.ExpiresIn != 0 {
		if sb.Len() > 7 {
			sb.WriteString(" ")
		}
		sb.WriteString("expires_in: ")
		sb.WriteString(strconv.FormatUint(uint64(x.ExpiresIn), 10))
	}
	sb.WriteString("}")
	return sb.String()
}

func (x *Token) String() string {
	return x.MarshalProtoText()
}
func (m *Formdata_FormItem) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Formdata_FormItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Formdata_FormItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DoubleValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_DoubleValue); ok {
				if err := oneof.DoubleValue.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &DoubleValue{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_DoubleValue{DoubleValue: v}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Int64Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_Int64Value); ok {
				if err := oneof.Int64Value.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Int64Value{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_Int64Value{Int64Value: v}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BoolValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_BoolValue); ok {
				if err := oneof.BoolValue.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &BoolValue{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_BoolValue{BoolValue: v}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StringValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_StringValue); ok {
				if err := oneof.StringValue.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &StringValue{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_StringValue{StringValue: v}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObscureStringValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_ObscureStringValue); ok {
				if err := oneof.ObscureStringValue.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &ObscureStringValue{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_ObscureStringValue{ObscureStringValue: v}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirPathValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_DirPathValue); ok {
				if err := oneof.DirPathValue.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &DirPathValue{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_DirPathValue{DirPathValue: v}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePathValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_FilePathValue); ok {
				if err := oneof.FilePathValue.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &FilePathValue{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_FilePathValue{FilePathValue: v}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnumValues", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnumValues = append(m.EnumValues, &Formdata_FormItem{})
			if err := m.EnumValues[len(m.EnumValues)-1].UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formdata) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Formdata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Formdata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FormItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FormItems = append(m.FormItems, &Formdata_FormItem{})
			if err := m.FormItems[len(m.FormItems)-1].UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scanqrcode) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scanqrcode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scanqrcode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeImage", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrcodeImage = append(m.QrcodeImage[:0], dAtA[iNdEx:postIndex]...)
			if m.QrcodeImage == nil {
				m.QrcodeImage = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeImageParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrcodeImageParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeExpireTime", wireType)
			}
			m.QrcodeExpireTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QrcodeExpireTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Callback) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Callback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Callback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrlParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrlParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrlData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrlData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Refresh) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Refresh: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Refresh: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthData == nil {
				m.AuthData = &AuthData{}
			}
			if err := m.AuthData.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthMethod) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthMethod: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthMethod: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Formdata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Formdata); ok {
				if err := oneof.Formdata.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Formdata{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Formdata{Formdata: v}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scanqrcode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Scanqrcode); ok {
				if err := oneof.Scanqrcode.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Scanqrcode{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Scanqrcode{Scanqrcode: v}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callback", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Callback); ok {
				if err := oneof.Callback.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Callback{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Callback{Callback: v}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Refresh", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Refresh); ok {
				if err := oneof.Refresh.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Refresh{}
				if err := v.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Refresh{Refresh: v}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Auth) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Auth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Auth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthMethods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthMethods = append(m.AuthMethods, &AuthMethod{})
			if err := m.AuthMethods[len(m.AuthMethods)-1].UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileEntry) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileType", wireType)
			}
			m.FileType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileType |= FileEntry_FileType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size", wireType)
			}
			m.Size = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawData = append(m.RawData[:0], dAtA[iNdEx:postIndex]...)
			if m.RawData == nil {
				m.RawData = []byte{}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedTime", wireType)
			}
			m.CreatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModifiedTime", wireType)
			}
			m.ModifiedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModifiedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessedTime", wireType)
			}
			m.AccessedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccessedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DirEntry) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DirEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DirEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEntries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEntries = append(m.FileEntries, &FileEntry{})
			if err := m.FileEntries[len(m.FileEntries)-1].UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirPageKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DirPageKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDirEntryRequest) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDirEntryRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDirEntryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEntry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileEntry == nil {
				m.FileEntry = &FileEntry{}
			}
			if err := m.FileEntry.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirPageKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DirPageKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFileResourceRequest) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFileResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFileResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FilePath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEntry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileEntry == nil {
				m.FileEntry = &FileEntry{}
			}
			if err := m.FileEntry.UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileResource_FileResourceData) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileResource_FileResourceData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileResource_FileResourceData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resolution", wireType)
			}
			m.Resolution = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Resolution |= FileResource_Resolution(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireTime", wireType)
			}
			m.ExpireTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpireTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			m.ResourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceType |= FileResource_ResourceType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protobuf_go_lite.ErrIntOverflow
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protobuf_go_lite.ErrIntOverflow
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protobuf_go_lite.ErrIntOverflow
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Header[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileResource) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileResource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileResource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileResourceData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileResourceData = append(m.FileResourceData, &FileResource_FileResourceData{})
			if err := m.FileResourceData[len(m.FileResourceData)-1].UnmarshalVT(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthData) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthDataBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthDataBytes = append(m.AuthDataBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.AuthDataBytes == nil {
				m.AuthDataBytes = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthDataExpiredTime", wireType)
			}
			m.AuthDataExpiredTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthDataExpiredTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OauthConfig) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OauthConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OauthConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RedirectUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scopes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scopes = append(m.Scopes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrcodeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenReqType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenReqType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Token) UnmarshalVT(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Token: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Token: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefreshToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresIn", wireType)
			}
			m.ExpiresIn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresIn |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formdata_FormItem) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Formdata_FormItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Formdata_FormItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.Name = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DoubleValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_DoubleValue); ok {
				if err := oneof.DoubleValue.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &DoubleValue{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_DoubleValue{DoubleValue: v}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Int64Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_Int64Value); ok {
				if err := oneof.Int64Value.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Int64Value{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_Int64Value{Int64Value: v}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BoolValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_BoolValue); ok {
				if err := oneof.BoolValue.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &BoolValue{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_BoolValue{BoolValue: v}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StringValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_StringValue); ok {
				if err := oneof.StringValue.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &StringValue{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_StringValue{StringValue: v}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObscureStringValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_ObscureStringValue); ok {
				if err := oneof.ObscureStringValue.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &ObscureStringValue{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_ObscureStringValue{ObscureStringValue: v}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirPathValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_DirPathValue); ok {
				if err := oneof.DirPathValue.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &DirPathValue{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_DirPathValue{DirPathValue: v}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePathValue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Value.(*Formdata_FormItem_FilePathValue); ok {
				if err := oneof.FilePathValue.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &FilePathValue{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Value = &Formdata_FormItem_FilePathValue{FilePathValue: v}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnumValues", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnumValues = append(m.EnumValues, &Formdata_FormItem{})
			if err := m.EnumValues[len(m.EnumValues)-1].UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Formdata) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Formdata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Formdata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FormItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FormItems = append(m.FormItems, &Formdata_FormItem{})
			if err := m.FormItems[len(m.FormItems)-1].UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scanqrcode) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scanqrcode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scanqrcode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeImage", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrcodeImage = dAtA[iNdEx:postIndex]
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeImageParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.QrcodeImageParam = stringValue
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeExpireTime", wireType)
			}
			m.QrcodeExpireTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QrcodeExpireTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Callback) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Callback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Callback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.CallbackUrl = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrlParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.CallbackUrlParam = stringValue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrlData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.CallbackUrlData = stringValue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Refresh) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Refresh: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Refresh: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthData == nil {
				m.AuthData = &AuthData{}
			}
			if err := m.AuthData.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthMethod) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthMethod: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthMethod: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Formdata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Formdata); ok {
				if err := oneof.Formdata.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Formdata{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Formdata{Formdata: v}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scanqrcode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Scanqrcode); ok {
				if err := oneof.Scanqrcode.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Scanqrcode{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Scanqrcode{Scanqrcode: v}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Callback", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Callback); ok {
				if err := oneof.Callback.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Callback{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Callback{Callback: v}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Refresh", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if oneof, ok := m.Method.(*AuthMethod_Refresh); ok {
				if err := oneof.Refresh.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
			} else {
				v := &Refresh{}
				if err := v.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
					return err
				}
				m.Method = &AuthMethod_Refresh{Refresh: v}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Auth) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Auth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Auth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthMethods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthMethods = append(m.AuthMethods, &AuthMethod{})
			if err := m.AuthMethods[len(m.AuthMethods)-1].UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileEntry) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.Name = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileType", wireType)
			}
			m.FileType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileType |= FileEntry_FileType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size", wireType)
			}
			m.Size = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawData = dAtA[iNdEx:postIndex]
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedTime", wireType)
			}
			m.CreatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModifiedTime", wireType)
			}
			m.ModifiedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModifiedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessedTime", wireType)
			}
			m.AccessedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccessedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DirEntry) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DirEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DirEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEntries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEntries = append(m.FileEntries, &FileEntry{})
			if err := m.FileEntries[len(m.FileEntries)-1].UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirPageKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.DirPageKey = stringValue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDirEntryRequest) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDirEntryRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDirEntryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.Path = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEntry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileEntry == nil {
				m.FileEntry = &FileEntry{}
			}
			if err := m.FileEntry.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirPageKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.DirPageKey = stringValue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFileResourceRequest) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFileResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFileResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.FilePath = stringValue
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEntry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FileEntry == nil {
				m.FileEntry = &FileEntry{}
			}
			if err := m.FileEntry.UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileResource_FileResourceData) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileResource_FileResourceData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileResource_FileResourceData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.Url = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resolution", wireType)
			}
			m.Resolution = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Resolution |= FileResource_Resolution(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireTime", wireType)
			}
			m.ExpireTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpireTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			m.ResourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceType |= FileResource_ResourceType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.Title = stringValue
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protobuf_go_lite.ErrIntOverflow
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protobuf_go_lite.ErrIntOverflow
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					if intStringLenmapkey == 0 {
						mapkey = ""
					} else {
						mapkey = unsafe.String(&dAtA[iNdEx], intStringLenmapkey)
					}
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protobuf_go_lite.ErrIntOverflow
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					if intStringLenmapvalue == 0 {
						mapvalue = ""
					} else {
						mapvalue = unsafe.String(&dAtA[iNdEx], intStringLenmapvalue)
					}
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return protobuf_go_lite.ErrInvalidLength
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Header[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileResource) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileResource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileResource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileResourceData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileResourceData = append(m.FileResourceData, &FileResource_FileResourceData{})
			if err := m.FileResourceData[len(m.FileResourceData)-1].UnmarshalVTUnsafe(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthData) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthDataBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthDataBytes = dAtA[iNdEx:postIndex]
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthDataExpiredTime", wireType)
			}
			m.AuthDataExpiredTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthDataExpiredTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OauthConfig) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OauthConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OauthConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.ClientId = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.ClientSecret = stringValue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.RedirectUri = stringValue
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scopes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.Scopes = append(m.Scopes, stringValue)
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.AuthUrl = stringValue
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrcodeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.QrcodeUrl = stringValue
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.TokenUrl = stringValue
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenReqType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.TokenReqType = stringValue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Token) UnmarshalVTUnsafe(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return protobuf_go_lite.ErrIntOverflow
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Token: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Token: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.TokenType = stringValue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.AccessToken = stringValue
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var stringValue string
			if intStringLen > 0 {
				stringValue = unsafe.String(&dAtA[iNdEx], intStringLen)
			}
			m.RefreshToken = stringValue
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresIn", wireType)
			}
			m.ExpiresIn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protobuf_go_lite.ErrIntOverflow
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresIn |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := protobuf_go_lite.Skip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return protobuf_go_lite.ErrInvalidLength
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.unknownFields = append(m.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
